//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#if !EXCLUDE_CODEGEN
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 414
#pragma warning disable 649
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998

namespace ReachingTypeAnalysis.Analysis
{
    using ReachingTypeAnalysis;
    using Orleans;
    using System;
    using System.Runtime.InteropServices;
    using System.Runtime.Serialization;
    using System.Collections;
    using System.Collections.Generic;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [SerializableAttribute()]
    [global::Orleans.CodeGeneration.GrainStateAttribute("ReachingTypeAnalysis.Analysis.MethodEntityGrain")]
    public class MethodEntityGrainState : global::Orleans.GrainState, IOrleansEntityState
    {
        

            public MethodDescriptor @MethodDescriptor { get; set; }

            public override void SetAll(System.Collections.Generic.IDictionary<string,object> values)
            {   
                object value;
                if (values == null) { InitStateFields(); return; }
                if (values.TryGetValue("MethodDescriptor", out value)) @MethodDescriptor = (MethodDescriptor) value;
            }

            public override System.String ToString()
            {
                return System.String.Format("MethodEntityGrainState( MethodDescriptor={0} )", @MethodDescriptor);
            }
        
        public MethodEntityGrainState() : 
                base("ReachingTypeAnalysis.Analysis.MethodEntityGrain")
        {
            this.InitStateFields();
        }
        
        public override System.Collections.Generic.IDictionary<string, object> AsDictionary()
        {
            System.Collections.Generic.Dictionary<string, object> result = new System.Collections.Generic.Dictionary<string, object>();
            result["MethodDescriptor"] = this.MethodDescriptor;
            return result;
        }
        
        private void InitStateFields()
        {
            this.MethodDescriptor = new MethodDescriptor();
        }
        
        [global::Orleans.CodeGeneration.CopierMethodAttribute()]
        public static object _Copier(object original)
        {
            MethodEntityGrainState input = ((MethodEntityGrainState)(original));
            return input.DeepCopy();
        }
        
        [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
        public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            MethodEntityGrainState input = ((MethodEntityGrainState)(original));
            input.SerializeTo(stream);
        }
        
        [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
        public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            MethodEntityGrainState result = new MethodEntityGrainState();
            result.DeserializeFrom(stream);
            return result;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [SerializableAttribute()]
    [global::Orleans.CodeGeneration.GrainStateAttribute("ReachingTypeAnalysis.Analysis.SolutionGrain")]
    public class SolutionGrainState : global::Orleans.GrainState, ISolutionState
    {
        

            public String @SolutionPath { get; set; }

            public String @Source { get; set; }

            public String @TestName { get; set; }

            public override void SetAll(System.Collections.Generic.IDictionary<string,object> values)
            {   
                object value;
                if (values == null) { InitStateFields(); return; }
                if (values.TryGetValue("SolutionPath", out value)) @SolutionPath = (String) value;
                if (values.TryGetValue("Source", out value)) @Source = (String) value;
                if (values.TryGetValue("TestName", out value)) @TestName = (String) value;
            }

            public override System.String ToString()
            {
                return System.String.Format("SolutionGrainState( SolutionPath={0} Source={1} TestName={2} )", @SolutionPath, @Source, @TestName);
            }
        
        public SolutionGrainState() : 
                base("ReachingTypeAnalysis.Analysis.SolutionGrain")
        {
            this.InitStateFields();
        }
        
        public override System.Collections.Generic.IDictionary<string, object> AsDictionary()
        {
            System.Collections.Generic.Dictionary<string, object> result = new System.Collections.Generic.Dictionary<string, object>();
            result["SolutionPath"] = this.SolutionPath;
            result["Source"] = this.Source;
            result["TestName"] = this.TestName;
            return result;
        }
        
        private void InitStateFields()
        {
            this.SolutionPath = default(String);
            this.Source = default(String);
            this.TestName = default(String);
        }
        
        [global::Orleans.CodeGeneration.CopierMethodAttribute()]
        public static object _Copier(object original)
        {
            SolutionGrainState input = ((SolutionGrainState)(original));
            return input.DeepCopy();
        }
        
        [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
        public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            SolutionGrainState input = ((SolutionGrainState)(original));
            input.SerializeTo(stream);
        }
        
        [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
        public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            SolutionGrainState result = new SolutionGrainState();
            result.DeserializeFrom(stream);
            return result;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [SerializableAttribute()]
    [global::Orleans.CodeGeneration.GrainStateAttribute("ReachingTypeAnalysis.Analysis.ProjectCodeProviderGrain")]
    public class ProjectCodeProviderGrainState : global::Orleans.GrainState, IProjectState
    {
        

            public String @ProjectPath { get; set; }

            public String @AssemblyName { get; set; }

            public String @Source { get; set; }

            public String @TestName { get; set; }

            public override void SetAll(System.Collections.Generic.IDictionary<string,object> values)
            {   
                object value;
                if (values == null) { InitStateFields(); return; }
                if (values.TryGetValue("ProjectPath", out value)) @ProjectPath = (String) value;
                if (values.TryGetValue("AssemblyName", out value)) @AssemblyName = (String) value;
                if (values.TryGetValue("Source", out value)) @Source = (String) value;
                if (values.TryGetValue("TestName", out value)) @TestName = (String) value;
            }

            public override System.String ToString()
            {
                return System.String.Format("ProjectCodeProviderGrainState( ProjectPath={0} AssemblyName={1} Source={2} TestName={3} )", @ProjectPath, @AssemblyName, @Source, @TestName);
            }
        
        public ProjectCodeProviderGrainState() : 
                base("ReachingTypeAnalysis.Analysis.ProjectCodeProviderGrain")
        {
            this.InitStateFields();
        }
        
        public override System.Collections.Generic.IDictionary<string, object> AsDictionary()
        {
            System.Collections.Generic.Dictionary<string, object> result = new System.Collections.Generic.Dictionary<string, object>();
            result["ProjectPath"] = this.ProjectPath;
            result["AssemblyName"] = this.AssemblyName;
            result["Source"] = this.Source;
            result["TestName"] = this.TestName;
            return result;
        }
        
        private void InitStateFields()
        {
            this.ProjectPath = default(String);
            this.AssemblyName = default(String);
            this.Source = default(String);
            this.TestName = default(String);
        }
        
        [global::Orleans.CodeGeneration.CopierMethodAttribute()]
        public static object _Copier(object original)
        {
            ProjectCodeProviderGrainState input = ((ProjectCodeProviderGrainState)(original));
            return input.DeepCopy();
        }
        
        [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
        public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            ProjectCodeProviderGrainState input = ((ProjectCodeProviderGrainState)(original));
            input.SerializeTo(stream);
        }
        
        [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
        public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            ProjectCodeProviderGrainState result = new ProjectCodeProviderGrainState();
            result.DeserializeFrom(stream);
            return result;
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 649
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
