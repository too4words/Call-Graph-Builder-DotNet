//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#if !EXCLUDE_CODEGEN
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 414
#pragma warning disable 649
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998

namespace OrleansInterfaces
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using Orleans;
    using Orleans.Runtime;
    using Orleans.Core;
    using System.Collections;
    using ReachingTypeAnalysis;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class SolutionGrainFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<ISolutionGrain> instead.")]
                        public static ISolutionGrain GetGrain(System.String primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISolutionGrain), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<ISolutionGrain> instead.")]
                        public static ISolutionGrain GetGrain(System.String primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISolutionGrain), primaryKey, grainClassNamePrefix));
                        }

            public static ISolutionGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return SolutionGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("OrleansInterfaces.ISolutionGrain")]
        internal class SolutionGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, OrleansInterfaces.ISolutionGrain
        {
            

            public static ISolutionGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (ISolutionGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(ISolutionGrain), (global::Orleans.Runtime.GrainReference gr) => { return new SolutionGrainReference(gr);}, grainRef, -1646659855);
            }
            
            protected internal SolutionGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal SolutionGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1646659855;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "OrleansInterfaces.ISolutionGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                SolutionGrainReference input = ((SolutionGrainReference)(original));
                return ((SolutionGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                SolutionGrainReference input = ((SolutionGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return SolutionGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1277021679));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return SolutionGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task OrleansInterfaces.ISolutionGrain.SetSolutionPath(string @solutionPath)
            {

                return base.InvokeMethodAsync<object>(-472864594, new object[] {@solutionPath} );
            }
            
            System.Threading.Tasks.Task OrleansInterfaces.ISolutionGrain.SetSolutionSource(string @solutionSource)
            {

                return base.InvokeMethodAsync<object>(397961266, new object[] {@solutionSource} );
            }
            
            System.Threading.Tasks.Task<OrleansInterfaces.IProjectCodeProviderGrain> OrleansInterfaces.ISolutionGrain.GetCodeProviderAsync(ReachingTypeAnalysis.MethodDescriptor @methodDescriptor)
            {

                return base.InvokeMethodAsync<OrleansInterfaces.IProjectCodeProviderGrain>(1319809341, new object[] {@methodDescriptor} );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<ReachingTypeAnalysis.MethodDescriptor>> OrleansInterfaces.ISolutionGrain.GetRoots()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.IEnumerable<ReachingTypeAnalysis.MethodDescriptor>>(-1671080596, null );
            }
            
            System.Threading.Tasks.Task OrleansInterfaces.ISolutionGrain.AddInstantiatedTypes(IEnumerable<TypeDescriptor> @types)
            {

                return base.InvokeMethodAsync<object>(1844872131, new object[] {@types} );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>> OrleansInterfaces.ISolutionGrain.InstantiatedTypes()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>>(1212710020, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("OrleansInterfaces.ISolutionGrain", -1646659855)]
    internal class SolutionGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1646659855;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1646659855:  // ISolutionGrain
                        switch (methodId)
                        {
                            case -472864594: 
                                return ((ISolutionGrain)grain).SetSolutionPath((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 397961266: 
                                return ((ISolutionGrain)grain).SetSolutionSource((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1319809341: 
                                return ((ISolutionGrain)grain).GetCodeProviderAsync((ReachingTypeAnalysis.MethodDescriptor)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1671080596: 
                                return ((ISolutionGrain)grain).GetRoots().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1844872131: 
                                return ((ISolutionGrain)grain).AddInstantiatedTypes((System.Collections.Generic.IEnumerable<ReachingTypeAnalysis.TypeDescriptor>)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1212710020: 
                                return ((ISolutionGrain)grain).InstantiatedTypes().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1277021679:  // IGrainWithStringKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1646659855:  // ISolutionGrain
                    switch (methodId)
                    {
                        case -472864594:
                            return "SetSolutionPath";
                    case 397961266:
                            return "SetSolutionSource";
                    case 1319809341:
                            return "GetCodeProviderAsync";
                    case -1671080596:
                            return "GetRoots";
                    case 1844872131:
                            return "AddInstantiatedTypes";
                    case 1212710020:
                            return "InstantiatedTypes";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1277021679:  // IGrainWithStringKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class MethodEntityGrainFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IMethodEntityGrain> instead.")]
                        public static IMethodEntityGrain GetGrain(System.String primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IMethodEntityGrain), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IMethodEntityGrain> instead.")]
                        public static IMethodEntityGrain GetGrain(System.String primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IMethodEntityGrain), primaryKey, grainClassNamePrefix));
                        }

            public static IMethodEntityGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return MethodEntityGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("OrleansInterfaces.IMethodEntityGrain")]
        internal class MethodEntityGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, OrleansInterfaces.IMethodEntityGrain
        {
            

            public static IMethodEntityGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IMethodEntityGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IMethodEntityGrain), (global::Orleans.Runtime.GrainReference gr) => { return new MethodEntityGrainReference(gr);}, grainRef, 898358989);
            }
            
            protected internal MethodEntityGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal MethodEntityGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 898358989;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "OrleansInterfaces.IMethodEntityGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                MethodEntityGrainReference input = ((MethodEntityGrainReference)(original));
                return ((MethodEntityGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                MethodEntityGrainReference input = ((MethodEntityGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return MethodEntityGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1277021679));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return MethodEntityGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task OrleansInterfaces.IMethodEntityGrain.SetMethodEntityAsync(ReachingTypeAnalysis.IEntity @methodEntity, ReachingTypeAnalysis.MethodDescriptor @methodDescriptor)
            {

                return base.InvokeMethodAsync<object>(-2094452342, new object[] {@methodEntity, @methodDescriptor} );
            }
            
            System.Threading.Tasks.Task<ReachingTypeAnalysis.PropagationEffects> ReachingTypeAnalysis.IMethodEntityWithPropagator.PropagateAsync(ReachingTypeAnalysis.PropagationKind @propKind)
            {

                return base.InvokeMethodAsync<ReachingTypeAnalysis.PropagationEffects>(1262137734, new object[] {@propKind} );
            }
            
            System.Threading.Tasks.Task<ReachingTypeAnalysis.PropagationEffects> ReachingTypeAnalysis.IMethodEntityWithPropagator.PropagateAsync(ReachingTypeAnalysis.Communication.CallMessageInfo @callMessageInfo)
            {

                return base.InvokeMethodAsync<ReachingTypeAnalysis.PropagationEffects>(-1023082020, new object[] {@callMessageInfo} );
            }
            
            System.Threading.Tasks.Task<ReachingTypeAnalysis.PropagationEffects> ReachingTypeAnalysis.IMethodEntityWithPropagator.PropagateAsync(ReachingTypeAnalysis.Communication.ReturnMessageInfo @returnMessageInfo)
            {

                return base.InvokeMethodAsync<ReachingTypeAnalysis.PropagationEffects>(-1329787351, new object[] {@returnMessageInfo} );
            }
            
            System.Threading.Tasks.Task<bool> ReachingTypeAnalysis.IMethodEntityWithPropagator.IsInitializedAsync()
            {

                return base.InvokeMethodAsync<System.Boolean>(1375290350, null );
            }
            
            System.Threading.Tasks.Task<ReachingTypeAnalysis.IEntity> ReachingTypeAnalysis.IMethodEntityWithPropagator.GetMethodEntityAsync()
            {

                return base.InvokeMethodAsync<ReachingTypeAnalysis.IEntity>(596954776, null );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.ISet<ReachingTypeAnalysis.MethodDescriptor>> ReachingTypeAnalysis.IMethodEntityWithPropagator.GetCalleesAsync()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.ISet<ReachingTypeAnalysis.MethodDescriptor>>(412610256, null );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.IDictionary<ReachingTypeAnalysis.AnalysisCallNode, System.Collections.Generic.ISet<ReachingTypeAnalysis.MethodDescriptor>>> ReachingTypeAnalysis.IMethodEntityWithPropagator.GetCalleesInfoAsync()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.IDictionary<ReachingTypeAnalysis.AnalysisCallNode,System.Collections.Generic.ISet<ReachingTypeAnalysis.MethodDescriptor>>>(-65115232, null );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.ISet<ReachingTypeAnalysis.MethodDescriptor>> ReachingTypeAnalysis.IMethodEntityWithPropagator.GetCalleesAsync(int @invocationPosition)
            {

                return base.InvokeMethodAsync<System.Collections.Generic.ISet<ReachingTypeAnalysis.MethodDescriptor>>(-526083791, new object[] {@invocationPosition} );
            }
            
            System.Threading.Tasks.Task<int> ReachingTypeAnalysis.IMethodEntityWithPropagator.GetInvocationCountAsync()
            {

                return base.InvokeMethodAsync<System.Int32>(-1748235903, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("OrleansInterfaces.IMethodEntityGrain", 898358989)]
    internal class MethodEntityGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 898358989;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 898358989:  // IMethodEntityGrain
                        switch (methodId)
                        {
                            case -2094452342: 
                                return ((IMethodEntityGrain)grain).SetMethodEntityAsync((IEntity)arguments[0], (MethodDescriptor)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1262137734: 
                                return ((IMethodEntityGrain)grain).PropagateAsync((PropagationKind)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1023082020: 
                                return ((IMethodEntityGrain)grain).PropagateAsync((ReachingTypeAnalysis.Communication.CallMessageInfo)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1329787351: 
                                return ((IMethodEntityGrain)grain).PropagateAsync((ReachingTypeAnalysis.Communication.ReturnMessageInfo)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1375290350: 
                                return ((IMethodEntityGrain)grain).IsInitializedAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 596954776: 
                                return ((IMethodEntityGrain)grain).GetMethodEntityAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 412610256: 
                                return ((IMethodEntityGrain)grain).GetCalleesAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -65115232: 
                                return ((IMethodEntityGrain)grain).GetCalleesInfoAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -526083791: 
                                return ((IMethodEntityGrain)grain).GetCalleesAsync((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1748235903: 
                                return ((IMethodEntityGrain)grain).GetInvocationCountAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1277021679:  // IGrainWithStringKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 898358989:  // IMethodEntityGrain
                    switch (methodId)
                    {
                        case -2094452342:
                            return "SetMethodEntityAsync";
                    case 1262137734:
                            return "PropagateAsync";
                    case -1023082020:
                            return "PropagateAsync";
                    case -1329787351:
                            return "PropagateAsync";
                    case 1375290350:
                            return "IsInitializedAsync";
                    case 596954776:
                            return "GetMethodEntityAsync";
                    case 412610256:
                            return "GetCalleesAsync";
                    case -65115232:
                            return "GetCalleesInfoAsync";
                    case -526083791:
                            return "GetCalleesAsync";
                    case -1748235903:
                            return "GetInvocationCountAsync";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1277021679:  // IGrainWithStringKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class ProjectCodeProviderGrainFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IProjectCodeProviderGrain> instead.")]
                        public static IProjectCodeProviderGrain GetGrain(System.String primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IProjectCodeProviderGrain), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IProjectCodeProviderGrain> instead.")]
                        public static IProjectCodeProviderGrain GetGrain(System.String primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IProjectCodeProviderGrain), primaryKey, grainClassNamePrefix));
                        }

            public static IProjectCodeProviderGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return ProjectCodeProviderGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("OrleansInterfaces.IProjectCodeProviderGrain")]
        internal class ProjectCodeProviderGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, OrleansInterfaces.IProjectCodeProviderGrain
        {
            

            public static IProjectCodeProviderGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IProjectCodeProviderGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IProjectCodeProviderGrain), (global::Orleans.Runtime.GrainReference gr) => { return new ProjectCodeProviderGrainReference(gr);}, grainRef, 306204708);
            }
            
            protected internal ProjectCodeProviderGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal ProjectCodeProviderGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 306204708;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "OrleansInterfaces.IProjectCodeProviderGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                ProjectCodeProviderGrainReference input = ((ProjectCodeProviderGrainReference)(original));
                return ((ProjectCodeProviderGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                ProjectCodeProviderGrainReference input = ((ProjectCodeProviderGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return ProjectCodeProviderGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1277021679));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return ProjectCodeProviderGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<bool> OrleansInterfaces.IProjectCodeProviderGrain.IsSubtypeAsync(ReachingTypeAnalysis.TypeDescriptor @typeDescriptor1, ReachingTypeAnalysis.TypeDescriptor @typeDescriptor2)
            {

                return base.InvokeMethodAsync<System.Boolean>(747974890, new object[] {@typeDescriptor1, @typeDescriptor2} );
            }
            
            System.Threading.Tasks.Task<ReachingTypeAnalysis.MethodDescriptor> OrleansInterfaces.IProjectCodeProviderGrain.FindMethodImplementationAsync(ReachingTypeAnalysis.MethodDescriptor @methodDescriptor, ReachingTypeAnalysis.TypeDescriptor @typeDescriptor)
            {

                return base.InvokeMethodAsync<ReachingTypeAnalysis.MethodDescriptor>(-819592028, new object[] {@methodDescriptor, @typeDescriptor} );
            }
            
            System.Threading.Tasks.Task<ReachingTypeAnalysis.IEntity> OrleansInterfaces.IProjectCodeProviderGrain.CreateMethodEntityAsync(ReachingTypeAnalysis.MethodDescriptor @methodDescriptor)
            {

                return base.InvokeMethodAsync<ReachingTypeAnalysis.IEntity>(-625742380, new object[] {@methodDescriptor} );
            }
            
            System.Threading.Tasks.Task OrleansInterfaces.IProjectCodeProviderGrain.SetProjectPath(string @fullPath)
            {

                return base.InvokeMethodAsync<object>(-397931987, new object[] {@fullPath} );
            }
            
            System.Threading.Tasks.Task OrleansInterfaces.IProjectCodeProviderGrain.SetProjectSourceCode(string @source)
            {

                return base.InvokeMethodAsync<object>(-113155710, new object[] {@source} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("OrleansInterfaces.IProjectCodeProviderGrain", 306204708)]
    internal class ProjectCodeProviderGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 306204708;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 306204708:  // IProjectCodeProviderGrain
                        switch (methodId)
                        {
                            case 747974890: 
                                return ((IProjectCodeProviderGrain)grain).IsSubtypeAsync((TypeDescriptor)arguments[0], (TypeDescriptor)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -819592028: 
                                return ((IProjectCodeProviderGrain)grain).FindMethodImplementationAsync((MethodDescriptor)arguments[0], (TypeDescriptor)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -625742380: 
                                return ((IProjectCodeProviderGrain)grain).CreateMethodEntityAsync((MethodDescriptor)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -397931987: 
                                return ((IProjectCodeProviderGrain)grain).SetProjectPath((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -113155710: 
                                return ((IProjectCodeProviderGrain)grain).SetProjectSourceCode((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1277021679:  // IGrainWithStringKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 306204708:  // IProjectCodeProviderGrain
                    switch (methodId)
                    {
                        case 747974890:
                            return "IsSubtypeAsync";
                    case -819592028:
                            return "FindMethodImplementationAsync";
                    case -625742380:
                            return "CreateMethodEntityAsync";
                    case -397931987:
                            return "SetProjectPath";
                    case -113155710:
                            return "SetProjectSourceCode";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1277021679:  // IGrainWithStringKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
}
namespace OrleansInterfacesSerializers
{
    using System;
    using System.Collections.Generic;
    using System.Reflection;
    using Orleans.Serialization;
    using ReachingTypeAnalysis;
    using ReachingTypeAnalysis.Communication;
    using System.Collections;
    using System.Runtime.InteropServices;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class ReachingTypeAnalysis_MethodDescriptorSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        private static System.Reflection.FieldInfo fieldInfo5;
        
        private static System.Reflection.FieldInfo fieldInfo6;
        
        private static System.Reflection.FieldInfo fieldInfo7;
        
        private static System.Reflection.FieldInfo fieldInfo8;
        
        static ReachingTypeAnalysis_MethodDescriptorSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            ReachingTypeAnalysis.MethodDescriptor input = ((ReachingTypeAnalysis.MethodDescriptor)(original));
            ReachingTypeAnalysis.MethodDescriptor result = new ReachingTypeAnalysis.MethodDescriptor();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = input.ClassName;
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = input.IsStatic;
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = input.MethodName;
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = input.NamespaceName;
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((System.Collections.Generic.IList<ReachingTypeAnalysis.TypeDescriptor>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Parameters)));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((ReachingTypeAnalysis.TypeDescriptor)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.ReturnType)));
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = ((ReachingTypeAnalysis.TypeDescriptor)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo7.GetValue(input))));
            fieldInfo7.SetValue(objResult, temp7);
            object temp8 = fieldInfo8.GetValue(input);
            fieldInfo8.SetValue(objResult, temp8);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            ReachingTypeAnalysis.MethodDescriptor input = ((ReachingTypeAnalysis.MethodDescriptor)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ClassName, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.IsStatic, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.MethodName, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.NamespaceName, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Parameters, stream, typeof(System.Collections.Generic.IList<ReachingTypeAnalysis.TypeDescriptor>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ReturnType, stream, typeof(ReachingTypeAnalysis.TypeDescriptor));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo7.GetValue(input), stream, typeof(ReachingTypeAnalysis.TypeDescriptor));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo8.GetValue(input), stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            ReachingTypeAnalysis.MethodDescriptor result = new ReachingTypeAnalysis.MethodDescriptor();
            object objResult = ((object)(result));
            object temp1 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((System.Collections.Generic.IList<ReachingTypeAnalysis.TypeDescriptor>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.IList<ReachingTypeAnalysis.TypeDescriptor>), stream)));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((ReachingTypeAnalysis.TypeDescriptor)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.TypeDescriptor), stream)));
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = ((ReachingTypeAnalysis.TypeDescriptor)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.TypeDescriptor), stream)));
            fieldInfo7.SetValue(objResult, temp7);
            object temp8 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo8.SetValue(objResult, temp8);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(ReachingTypeAnalysis.MethodDescriptor), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(ReachingTypeAnalysis.MethodDescriptor).GetField("<ClassName>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(ReachingTypeAnalysis.MethodDescriptor).GetField("<IsStatic>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(ReachingTypeAnalysis.MethodDescriptor).GetField("<MethodName>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(ReachingTypeAnalysis.MethodDescriptor).GetField("<NamespaceName>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo5 = typeof(ReachingTypeAnalysis.MethodDescriptor).GetField("<Parameters>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo6 = typeof(ReachingTypeAnalysis.MethodDescriptor).GetField("<ReturnType>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo7 = typeof(ReachingTypeAnalysis.MethodDescriptor).GetField("containerType", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo8 = typeof(ReachingTypeAnalysis.MethodDescriptor).GetField("name", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class ReachingTypeAnalysis_TypeDescriptorSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        static ReachingTypeAnalysis_TypeDescriptorSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            ReachingTypeAnalysis.TypeDescriptor input = ((ReachingTypeAnalysis.TypeDescriptor)(original));
            ReachingTypeAnalysis.TypeDescriptor result = ((ReachingTypeAnalysis.TypeDescriptor)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ReachingTypeAnalysis.TypeDescriptor))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = input.IsConcreteType;
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = input.IsReferenceType;
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = input.Kind;
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = input.TypeName;
            fieldInfo4.SetValue(objResult, temp4);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            ReachingTypeAnalysis.TypeDescriptor input = ((ReachingTypeAnalysis.TypeDescriptor)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.IsConcreteType, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.IsReferenceType, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Kind, stream, typeof(ReachingTypeAnalysis.SerializableTypeKind));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TypeName, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            ReachingTypeAnalysis.TypeDescriptor result = ((ReachingTypeAnalysis.TypeDescriptor)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ReachingTypeAnalysis.TypeDescriptor))));
            object objResult = ((object)(result));
            object temp1 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((ReachingTypeAnalysis.SerializableTypeKind)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.SerializableTypeKind), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(ReachingTypeAnalysis.TypeDescriptor), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(ReachingTypeAnalysis.TypeDescriptor).GetField("<IsConcreteType>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(ReachingTypeAnalysis.TypeDescriptor).GetField("<IsReferenceType>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(ReachingTypeAnalysis.TypeDescriptor).GetField("<Kind>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(ReachingTypeAnalysis.TypeDescriptor).GetField("<TypeName>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class ReachingTypeAnalysis_PropagationEffectsSerialization
    {
        
        static ReachingTypeAnalysis_PropagationEffectsSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            ReachingTypeAnalysis.PropagationEffects input = ((ReachingTypeAnalysis.PropagationEffects)(original));
            ReachingTypeAnalysis.PropagationEffects result = ((ReachingTypeAnalysis.PropagationEffects)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ReachingTypeAnalysis.PropagationEffects))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.CalleesInfo = ((System.Collections.Generic.ISet<ReachingTypeAnalysis.CallInfo>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.CalleesInfo)));
            result.CallersInfo = ((System.Collections.Generic.ISet<ReachingTypeAnalysis.ReturnInfo>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.CallersInfo)));
            result.ResultChanged = input.ResultChanged;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            ReachingTypeAnalysis.PropagationEffects input = ((ReachingTypeAnalysis.PropagationEffects)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CalleesInfo, stream, typeof(System.Collections.Generic.ISet<ReachingTypeAnalysis.CallInfo>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CallersInfo, stream, typeof(System.Collections.Generic.ISet<ReachingTypeAnalysis.ReturnInfo>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ResultChanged, stream, typeof(bool));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            ReachingTypeAnalysis.PropagationEffects result = ((ReachingTypeAnalysis.PropagationEffects)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ReachingTypeAnalysis.PropagationEffects))));
            result.CalleesInfo = ((System.Collections.Generic.ISet<ReachingTypeAnalysis.CallInfo>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.ISet<ReachingTypeAnalysis.CallInfo>), stream)));
            result.CallersInfo = ((System.Collections.Generic.ISet<ReachingTypeAnalysis.ReturnInfo>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.ISet<ReachingTypeAnalysis.ReturnInfo>), stream)));
            result.ResultChanged = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(ReachingTypeAnalysis.PropagationEffects), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class ReachingTypeAnalysis_ReturnInfoSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        static ReachingTypeAnalysis_ReturnInfoSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            ReachingTypeAnalysis.ReturnInfo input = ((ReachingTypeAnalysis.ReturnInfo)(original));
            ReachingTypeAnalysis.ReturnInfo result = ((ReachingTypeAnalysis.ReturnInfo)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ReachingTypeAnalysis.ReturnInfo))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Callee = ((ReachingTypeAnalysis.MethodDescriptor)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Callee)));
            object objResult = ((object)(result));
            object temp2 = ((ReachingTypeAnalysis.CallContext)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.CallerContext)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.InstantiatedTypes)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.ResultPossibleTypes)));
            fieldInfo4.SetValue(objResult, temp4);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            ReachingTypeAnalysis.ReturnInfo input = ((ReachingTypeAnalysis.ReturnInfo)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Callee, stream, typeof(ReachingTypeAnalysis.MethodDescriptor));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CallerContext, stream, typeof(ReachingTypeAnalysis.CallContext));
            Orleans.Serialization.SerializationManager.SerializeInner(input.InstantiatedTypes, stream, typeof(System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ResultPossibleTypes, stream, typeof(System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            ReachingTypeAnalysis.ReturnInfo result = ((ReachingTypeAnalysis.ReturnInfo)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ReachingTypeAnalysis.ReturnInfo))));
            result.Callee = ((ReachingTypeAnalysis.MethodDescriptor)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.MethodDescriptor), stream)));
            object objResult = ((object)(result));
            object temp2 = ((ReachingTypeAnalysis.CallContext)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.CallContext), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(ReachingTypeAnalysis.ReturnInfo), DeepCopier, Serializer, Deserializer);
            fieldInfo2 = typeof(ReachingTypeAnalysis.ReturnInfo).GetField("<CallerContext>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(ReachingTypeAnalysis.ReturnInfo).GetField("<InstantiatedTypes>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(ReachingTypeAnalysis.ReturnInfo).GetField("<ResultPossibleTypes>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class ReachingTypeAnalysis_CallContextSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        static ReachingTypeAnalysis_CallContextSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            ReachingTypeAnalysis.CallContext input = ((ReachingTypeAnalysis.CallContext)(original));
            ReachingTypeAnalysis.CallContext result = ((ReachingTypeAnalysis.CallContext)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ReachingTypeAnalysis.CallContext))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((ReachingTypeAnalysis.AnalysisCallNode)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.CallNode)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((ReachingTypeAnalysis.MethodDescriptor)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Caller)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((ReachingTypeAnalysis.VariableNode)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.LHS)));
            fieldInfo3.SetValue(objResult, temp3);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            ReachingTypeAnalysis.CallContext input = ((ReachingTypeAnalysis.CallContext)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CallNode, stream, typeof(ReachingTypeAnalysis.AnalysisCallNode));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Caller, stream, typeof(ReachingTypeAnalysis.MethodDescriptor));
            Orleans.Serialization.SerializationManager.SerializeInner(input.LHS, stream, typeof(ReachingTypeAnalysis.VariableNode));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            ReachingTypeAnalysis.CallContext result = ((ReachingTypeAnalysis.CallContext)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ReachingTypeAnalysis.CallContext))));
            object objResult = ((object)(result));
            object temp1 = ((ReachingTypeAnalysis.AnalysisCallNode)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.AnalysisCallNode), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((ReachingTypeAnalysis.MethodDescriptor)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.MethodDescriptor), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((ReachingTypeAnalysis.VariableNode)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.VariableNode), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(ReachingTypeAnalysis.CallContext), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(ReachingTypeAnalysis.CallContext).GetField("<CallNode>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(ReachingTypeAnalysis.CallContext).GetField("<Caller>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(ReachingTypeAnalysis.CallContext).GetField("<LHS>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class ReachingTypeAnalysis_VariableNodeSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        static ReachingTypeAnalysis_VariableNodeSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            ReachingTypeAnalysis.VariableNode input = ((ReachingTypeAnalysis.VariableNode)(original));
            ReachingTypeAnalysis.VariableNode result = ((ReachingTypeAnalysis.VariableNode)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ReachingTypeAnalysis.VariableNode))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = input.Name;
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((ReachingTypeAnalysis.TypeDescriptor)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Type)));
            fieldInfo2.SetValue(objResult, temp2);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            ReachingTypeAnalysis.VariableNode input = ((ReachingTypeAnalysis.VariableNode)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Name, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Type, stream, typeof(ReachingTypeAnalysis.TypeDescriptor));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            ReachingTypeAnalysis.VariableNode result = ((ReachingTypeAnalysis.VariableNode)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ReachingTypeAnalysis.VariableNode))));
            object objResult = ((object)(result));
            object temp1 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((ReachingTypeAnalysis.TypeDescriptor)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.TypeDescriptor), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(ReachingTypeAnalysis.VariableNode), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(ReachingTypeAnalysis.PropGraphNodeDescriptor).GetField("<Name>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(ReachingTypeAnalysis.PropGraphNodeDescriptor).GetField("<Type>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class ReachingTypeAnalysis_Communication_CallMessageInfoSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        private static System.Reflection.FieldInfo fieldInfo5;
        
        private static System.Reflection.FieldInfo fieldInfo6;
        
        private static System.Reflection.FieldInfo fieldInfo7;
        
        static ReachingTypeAnalysis_Communication_CallMessageInfoSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            ReachingTypeAnalysis.Communication.CallMessageInfo input = ((ReachingTypeAnalysis.Communication.CallMessageInfo)(original));
            ReachingTypeAnalysis.Communication.CallMessageInfo result = new ReachingTypeAnalysis.Communication.CallMessageInfo();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((System.Collections.Generic.IList<System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.ArgumentsPossibleTypes)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((ReachingTypeAnalysis.AnalysisCallNode)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.CallNode)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((ReachingTypeAnalysis.MethodDescriptor)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Callee)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((ReachingTypeAnalysis.MethodDescriptor)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Caller)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((ReachingTypeAnalysis.VariableNode)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.LHS)));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = input.PropagationKind;
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = ((System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.ReceiverPossibleTypes)));
            fieldInfo7.SetValue(objResult, temp7);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            ReachingTypeAnalysis.Communication.CallMessageInfo input = ((ReachingTypeAnalysis.Communication.CallMessageInfo)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ArgumentsPossibleTypes, stream, typeof(System.Collections.Generic.IList<System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CallNode, stream, typeof(ReachingTypeAnalysis.AnalysisCallNode));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Callee, stream, typeof(ReachingTypeAnalysis.MethodDescriptor));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Caller, stream, typeof(ReachingTypeAnalysis.MethodDescriptor));
            Orleans.Serialization.SerializationManager.SerializeInner(input.LHS, stream, typeof(ReachingTypeAnalysis.VariableNode));
            Orleans.Serialization.SerializationManager.SerializeInner(input.PropagationKind, stream, typeof(ReachingTypeAnalysis.PropagationKind));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ReceiverPossibleTypes, stream, typeof(System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            ReachingTypeAnalysis.Communication.CallMessageInfo result = new ReachingTypeAnalysis.Communication.CallMessageInfo();
            object objResult = ((object)(result));
            object temp1 = ((System.Collections.Generic.IList<System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.IList<System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>>), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((ReachingTypeAnalysis.AnalysisCallNode)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.AnalysisCallNode), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((ReachingTypeAnalysis.MethodDescriptor)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.MethodDescriptor), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((ReachingTypeAnalysis.MethodDescriptor)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.MethodDescriptor), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((ReachingTypeAnalysis.VariableNode)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.VariableNode), stream)));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((ReachingTypeAnalysis.PropagationKind)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.PropagationKind), stream)));
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = ((System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>), stream)));
            fieldInfo7.SetValue(objResult, temp7);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(ReachingTypeAnalysis.Communication.CallMessageInfo), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(ReachingTypeAnalysis.Communication.CallMessageInfo).GetField("<ArgumentsPossibleTypes>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(ReachingTypeAnalysis.Communication.CallMessageInfo).GetField("<CallNode>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(ReachingTypeAnalysis.Communication.CallMessageInfo).GetField("<Callee>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(ReachingTypeAnalysis.Communication.CallMessageInfo).GetField("<Caller>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo5 = typeof(ReachingTypeAnalysis.Communication.CallMessageInfo).GetField("<LHS>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo6 = typeof(ReachingTypeAnalysis.Communication.CallMessageInfo).GetField("<PropagationKind>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo7 = typeof(ReachingTypeAnalysis.Communication.CallMessageInfo).GetField("<ReceiverPossibleTypes>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class ReachingTypeAnalysis_Communication_ReturnMessageInfoSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        private static System.Reflection.FieldInfo fieldInfo5;
        
        private static System.Reflection.FieldInfo fieldInfo6;
        
        static ReachingTypeAnalysis_Communication_ReturnMessageInfoSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            ReachingTypeAnalysis.Communication.ReturnMessageInfo input = ((ReachingTypeAnalysis.Communication.ReturnMessageInfo)(original));
            ReachingTypeAnalysis.Communication.ReturnMessageInfo result = new ReachingTypeAnalysis.Communication.ReturnMessageInfo();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((ReachingTypeAnalysis.AnalysisCallNode)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.CallNode)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((ReachingTypeAnalysis.MethodDescriptor)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Callee)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((ReachingTypeAnalysis.MethodDescriptor)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Caller)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((ReachingTypeAnalysis.VariableNode)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.LHS)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = input.PropagationKind;
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.ResultPossibleTypes)));
            fieldInfo6.SetValue(objResult, temp6);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            ReachingTypeAnalysis.Communication.ReturnMessageInfo input = ((ReachingTypeAnalysis.Communication.ReturnMessageInfo)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CallNode, stream, typeof(ReachingTypeAnalysis.AnalysisCallNode));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Callee, stream, typeof(ReachingTypeAnalysis.MethodDescriptor));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Caller, stream, typeof(ReachingTypeAnalysis.MethodDescriptor));
            Orleans.Serialization.SerializationManager.SerializeInner(input.LHS, stream, typeof(ReachingTypeAnalysis.VariableNode));
            Orleans.Serialization.SerializationManager.SerializeInner(input.PropagationKind, stream, typeof(ReachingTypeAnalysis.PropagationKind));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ResultPossibleTypes, stream, typeof(System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            ReachingTypeAnalysis.Communication.ReturnMessageInfo result = new ReachingTypeAnalysis.Communication.ReturnMessageInfo();
            object objResult = ((object)(result));
            object temp1 = ((ReachingTypeAnalysis.AnalysisCallNode)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.AnalysisCallNode), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((ReachingTypeAnalysis.MethodDescriptor)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.MethodDescriptor), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((ReachingTypeAnalysis.MethodDescriptor)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.MethodDescriptor), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((ReachingTypeAnalysis.VariableNode)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.VariableNode), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((ReachingTypeAnalysis.PropagationKind)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.PropagationKind), stream)));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>), stream)));
            fieldInfo6.SetValue(objResult, temp6);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(ReachingTypeAnalysis.Communication.ReturnMessageInfo), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(ReachingTypeAnalysis.Communication.ReturnMessageInfo).GetField("<CallNode>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(ReachingTypeAnalysis.Communication.ReturnMessageInfo).GetField("<Callee>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(ReachingTypeAnalysis.Communication.ReturnMessageInfo).GetField("<Caller>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(ReachingTypeAnalysis.Communication.ReturnMessageInfo).GetField("<LHS>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo5 = typeof(ReachingTypeAnalysis.Communication.ReturnMessageInfo).GetField("<PropagationKind>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo6 = typeof(ReachingTypeAnalysis.Communication.ReturnMessageInfo).GetField("<ResultPossibleTypes>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class ReachingTypeAnalysis_AnalysisCallNodeSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        static ReachingTypeAnalysis_AnalysisCallNodeSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            ReachingTypeAnalysis.AnalysisCallNode input = ((ReachingTypeAnalysis.AnalysisCallNode)(original));
            ReachingTypeAnalysis.AnalysisCallNode result = ((ReachingTypeAnalysis.AnalysisCallNode)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ReachingTypeAnalysis.AnalysisCallNode))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = input.InMethodPosition;
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((ReachingTypeAnalysis.LocationDescriptor)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.LocationDescriptor)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = input.Name;
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((ReachingTypeAnalysis.TypeDescriptor)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Type)));
            fieldInfo4.SetValue(objResult, temp4);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            ReachingTypeAnalysis.AnalysisCallNode input = ((ReachingTypeAnalysis.AnalysisCallNode)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.InMethodPosition, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.LocationDescriptor, stream, typeof(ReachingTypeAnalysis.LocationDescriptor));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Name, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Type, stream, typeof(ReachingTypeAnalysis.TypeDescriptor));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            ReachingTypeAnalysis.AnalysisCallNode result = ((ReachingTypeAnalysis.AnalysisCallNode)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ReachingTypeAnalysis.AnalysisCallNode))));
            object objResult = ((object)(result));
            object temp1 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((ReachingTypeAnalysis.LocationDescriptor)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.LocationDescriptor), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((ReachingTypeAnalysis.TypeDescriptor)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.TypeDescriptor), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(ReachingTypeAnalysis.AnalysisCallNode), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(ReachingTypeAnalysis.AnalysisCallNode).GetField("<InMethodPosition>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(ReachingTypeAnalysis.AnalysisCallNode).GetField("<LocationDescriptor>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(ReachingTypeAnalysis.PropGraphNodeDescriptor).GetField("<Name>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(ReachingTypeAnalysis.PropGraphNodeDescriptor).GetField("<Type>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class ReachingTypeAnalysis_LocationDescriptorSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        static ReachingTypeAnalysis_LocationDescriptorSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            ReachingTypeAnalysis.LocationDescriptor input = ((ReachingTypeAnalysis.LocationDescriptor)(original));
            ReachingTypeAnalysis.LocationDescriptor result = ((ReachingTypeAnalysis.LocationDescriptor)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ReachingTypeAnalysis.LocationDescriptor))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = input.InMethodOrder;
            fieldInfo1.SetValue(objResult, temp1);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            ReachingTypeAnalysis.LocationDescriptor input = ((ReachingTypeAnalysis.LocationDescriptor)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.InMethodOrder, stream, typeof(int));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            ReachingTypeAnalysis.LocationDescriptor result = ((ReachingTypeAnalysis.LocationDescriptor)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ReachingTypeAnalysis.LocationDescriptor))));
            object objResult = ((object)(result));
            object temp1 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(ReachingTypeAnalysis.LocationDescriptor), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(ReachingTypeAnalysis.LocationDescriptor).GetField("<InMethodOrder>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 649
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
