//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#if !EXCLUDE_CODEGEN
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 414
#pragma warning disable 649
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998

namespace OrleansInterfaces
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using Orleans;
    using Orleans.Runtime;
    using ReachingTypeAnalysis;
    using Orleans.Core;
    using System.Collections;
    using CodeGraphModel;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class ProjectCodeProviderGrainFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IProjectCodeProviderGrain> instead.")]
                        public static IProjectCodeProviderGrain GetGrain(System.String primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IProjectCodeProviderGrain), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IProjectCodeProviderGrain> instead.")]
                        public static IProjectCodeProviderGrain GetGrain(System.String primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IProjectCodeProviderGrain), primaryKey, grainClassNamePrefix));
                        }

            public static IProjectCodeProviderGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return ProjectCodeProviderGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("OrleansInterfaces.IProjectCodeProviderGrain")]
        internal class ProjectCodeProviderGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, OrleansInterfaces.IProjectCodeProviderGrain
        {
            

            public static IProjectCodeProviderGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IProjectCodeProviderGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IProjectCodeProviderGrain), (global::Orleans.Runtime.GrainReference gr) => { return new ProjectCodeProviderGrainReference(gr);}, grainRef, 306204708);
            }
            
            protected internal ProjectCodeProviderGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal ProjectCodeProviderGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 306204708;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "OrleansInterfaces.IProjectCodeProviderGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                ProjectCodeProviderGrainReference input = ((ProjectCodeProviderGrainReference)(original));
                return ((ProjectCodeProviderGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                ProjectCodeProviderGrainReference input = ((ProjectCodeProviderGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return ProjectCodeProviderGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1277021679));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return ProjectCodeProviderGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task OrleansInterfaces.IProjectCodeProviderGrain.SetProjectPathAsync(string @fullPath)
            {

                return base.InvokeMethodAsync<object>(149919461, new object[] {@fullPath} );
            }
            
            System.Threading.Tasks.Task OrleansInterfaces.IProjectCodeProviderGrain.SetProjectSourceAsync(string @source)
            {

                return base.InvokeMethodAsync<object>(-1586110512, new object[] {@source} );
            }
            
            System.Threading.Tasks.Task OrleansInterfaces.IProjectCodeProviderGrain.SetProjectFromTestAsync(string @testName)
            {

                return base.InvokeMethodAsync<object>(-467039097, new object[] {@testName} );
            }
            
            System.Threading.Tasks.Task OrleansInterfaces.IProjectCodeProviderGrain.ForceDeactivationAsync()
            {

                return base.InvokeMethodAsync<object>(2021534182, null );
            }
            
            System.Threading.Tasks.Task<bool> ReachingTypeAnalysis.IProjectCodeProvider.IsSubtypeAsync(ReachingTypeAnalysis.TypeDescriptor @typeDescriptor1, ReachingTypeAnalysis.TypeDescriptor @typeDescriptor2)
            {

                return base.InvokeMethodAsync<System.Boolean>(747974890, new object[] {@typeDescriptor1, @typeDescriptor2} );
            }
            
            System.Threading.Tasks.Task<ReachingTypeAnalysis.MethodDescriptor> ReachingTypeAnalysis.IProjectCodeProvider.FindMethodImplementationAsync(ReachingTypeAnalysis.MethodDescriptor @methodDescriptor, ReachingTypeAnalysis.TypeDescriptor @typeDescriptor)
            {

                return base.InvokeMethodAsync<ReachingTypeAnalysis.MethodDescriptor>(-819592028, new object[] {@methodDescriptor, @typeDescriptor} );
            }
            
            System.Threading.Tasks.Task<ReachingTypeAnalysis.IEntity> ReachingTypeAnalysis.IProjectCodeProvider.CreateMethodEntityAsync(ReachingTypeAnalysis.MethodDescriptor @methodDescriptor)
            {

                return base.InvokeMethodAsync<ReachingTypeAnalysis.IEntity>(-625742380, new object[] {@methodDescriptor} );
            }
            
            System.Threading.Tasks.Task<ReachingTypeAnalysis.IMethodEntityWithPropagator> ReachingTypeAnalysis.IProjectCodeProvider.GetMethodEntityAsync(ReachingTypeAnalysis.MethodDescriptor @methodDescriptor)
            {

                return base.InvokeMethodAsync<ReachingTypeAnalysis.IMethodEntityWithPropagator>(-1216938713, new object[] {@methodDescriptor} );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<ReachingTypeAnalysis.MethodDescriptor>> ReachingTypeAnalysis.IProjectCodeProvider.GetRootsAsync()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.IEnumerable<ReachingTypeAnalysis.MethodDescriptor>>(-1382348266, null );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<ReachingTypeAnalysis.MethodDescriptor>> ReachingTypeAnalysis.IProjectCodeProvider.GetPublicMethodsAsync()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.IEnumerable<ReachingTypeAnalysis.MethodDescriptor>>(-1048664479, null );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<ReachingTypeAnalysis.MethodDescriptor>> ReachingTypeAnalysis.IProjectCodeProvider.GetReachableMethodsAsync()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.IEnumerable<ReachingTypeAnalysis.MethodDescriptor>>(218487452, null );
            }
            
            System.Threading.Tasks.Task<int> ReachingTypeAnalysis.IProjectCodeProvider.GetReachableMethodsCountAsync()
            {

                return base.InvokeMethodAsync<System.Int32>(-407445145, null );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<CodeGraphModel.FileResponse>> ReachingTypeAnalysis.IProjectCodeProvider.GetDocumentsAsync()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.IEnumerable<CodeGraphModel.FileResponse>>(-1786662708, null );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<CodeGraphModel.FileResponse>> ReachingTypeAnalysis.IProjectCodeProvider.GetDocumentEntitiesAsync(string @documentPath)
            {

                return base.InvokeMethodAsync<System.Collections.Generic.IEnumerable<CodeGraphModel.FileResponse>>(-215926694, new object[] {@documentPath} );
            }
            
            System.Threading.Tasks.Task<ReachingTypeAnalysis.PropagationEffects> ReachingTypeAnalysis.IProjectCodeProvider.RemoveMethodAsync(ReachingTypeAnalysis.MethodDescriptor @methodToUpdate)
            {

                return base.InvokeMethodAsync<ReachingTypeAnalysis.PropagationEffects>(-712939535, new object[] {@methodToUpdate} );
            }
            
            System.Threading.Tasks.Task<ReachingTypeAnalysis.PropagationEffects> ReachingTypeAnalysis.IProjectCodeProvider.AddMethodAsync(ReachingTypeAnalysis.MethodDescriptor @methodToAdd)
            {

                return base.InvokeMethodAsync<ReachingTypeAnalysis.PropagationEffects>(270787994, new object[] {@methodToAdd} );
            }
            
            System.Threading.Tasks.Task ReachingTypeAnalysis.IProjectCodeProvider.ReplaceDocumentSourceAsync(string @source, string @documentPath)
            {

                return base.InvokeMethodAsync<object>(-1249255428, new object[] {@source, @documentPath} );
            }
            
            System.Threading.Tasks.Task ReachingTypeAnalysis.IProjectCodeProvider.ReplaceDocumentAsync(string @documentPath, string @newDocumentPath)
            {

                return base.InvokeMethodAsync<object>(-376506142, new object[] {@documentPath, @newDocumentPath} );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<ReachingTypeAnalysis.MethodModification>> ReachingTypeAnalysis.IProjectCodeProvider.GetModificationsAsync(IEnumerable<String> @modifiedDocuments)
            {

                return base.InvokeMethodAsync<System.Collections.Generic.IEnumerable<ReachingTypeAnalysis.MethodModification>>(1545148890, new object[] {@modifiedDocuments} );
            }
            
            System.Threading.Tasks.Task ReachingTypeAnalysis.IProjectCodeProvider.ReloadAsync()
            {

                return base.InvokeMethodAsync<object>(1656425842, null );
            }
            
            System.Threading.Tasks.Task<CodeGraphModel.SymbolReference> ReachingTypeAnalysis.IProjectCodeProvider.GetDeclarationInfoAsync(ReachingTypeAnalysis.MethodDescriptor @methodDescriptor)
            {

                return base.InvokeMethodAsync<CodeGraphModel.SymbolReference>(-897137724, new object[] {@methodDescriptor} );
            }
            
            System.Threading.Tasks.Task<CodeGraphModel.SymbolReference> ReachingTypeAnalysis.IProjectCodeProvider.GetInvocationInfoAsync(ReachingTypeAnalysis.CallContext @callContext)
            {

                return base.InvokeMethodAsync<CodeGraphModel.SymbolReference>(2072120383, new object[] {@callContext} );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<ReachingTypeAnalysis.TypeDescriptor>> ReachingTypeAnalysis.IProjectCodeProvider.GetCompatibleInstantiatedTypesAsync(ReachingTypeAnalysis.TypeDescriptor @type)
            {

                return base.InvokeMethodAsync<System.Collections.Generic.IEnumerable<ReachingTypeAnalysis.TypeDescriptor>>(1884882198, new object[] {@type} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("OrleansInterfaces.IProjectCodeProviderGrain", 306204708)]
    internal class ProjectCodeProviderGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 306204708;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 306204708:  // IProjectCodeProviderGrain
                        switch (methodId)
                        {
                            case 149919461: 
                                return ((IProjectCodeProviderGrain)grain).SetProjectPathAsync((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1586110512: 
                                return ((IProjectCodeProviderGrain)grain).SetProjectSourceAsync((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -467039097: 
                                return ((IProjectCodeProviderGrain)grain).SetProjectFromTestAsync((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 2021534182: 
                                return ((IProjectCodeProviderGrain)grain).ForceDeactivationAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 747974890: 
                                return ((IProjectCodeProviderGrain)grain).IsSubtypeAsync((TypeDescriptor)arguments[0], (TypeDescriptor)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -819592028: 
                                return ((IProjectCodeProviderGrain)grain).FindMethodImplementationAsync((MethodDescriptor)arguments[0], (TypeDescriptor)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -625742380: 
                                return ((IProjectCodeProviderGrain)grain).CreateMethodEntityAsync((MethodDescriptor)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1216938713: 
                                return ((IProjectCodeProviderGrain)grain).GetMethodEntityAsync((MethodDescriptor)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1382348266: 
                                return ((IProjectCodeProviderGrain)grain).GetRootsAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1048664479: 
                                return ((IProjectCodeProviderGrain)grain).GetPublicMethodsAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 218487452: 
                                return ((IProjectCodeProviderGrain)grain).GetReachableMethodsAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -407445145: 
                                return ((IProjectCodeProviderGrain)grain).GetReachableMethodsCountAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1786662708: 
                                return ((IProjectCodeProviderGrain)grain).GetDocumentsAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -215926694: 
                                return ((IProjectCodeProviderGrain)grain).GetDocumentEntitiesAsync((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -712939535: 
                                return ((IProjectCodeProviderGrain)grain).RemoveMethodAsync((MethodDescriptor)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 270787994: 
                                return ((IProjectCodeProviderGrain)grain).AddMethodAsync((MethodDescriptor)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1249255428: 
                                return ((IProjectCodeProviderGrain)grain).ReplaceDocumentSourceAsync((String)arguments[0], (String)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -376506142: 
                                return ((IProjectCodeProviderGrain)grain).ReplaceDocumentAsync((String)arguments[0], (String)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1545148890: 
                                return ((IProjectCodeProviderGrain)grain).GetModificationsAsync((System.Collections.Generic.IEnumerable<String>)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1656425842: 
                                return ((IProjectCodeProviderGrain)grain).ReloadAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -897137724: 
                                return ((IProjectCodeProviderGrain)grain).GetDeclarationInfoAsync((MethodDescriptor)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 2072120383: 
                                return ((IProjectCodeProviderGrain)grain).GetInvocationInfoAsync((CallContext)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1884882198: 
                                return ((IProjectCodeProviderGrain)grain).GetCompatibleInstantiatedTypesAsync((TypeDescriptor)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1277021679:  // IGrainWithStringKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 306204708:  // IProjectCodeProviderGrain
                    switch (methodId)
                    {
                        case 149919461:
                            return "SetProjectPathAsync";
                    case -1586110512:
                            return "SetProjectSourceAsync";
                    case -467039097:
                            return "SetProjectFromTestAsync";
                    case 2021534182:
                            return "ForceDeactivationAsync";
                    case 747974890:
                            return "IsSubtypeAsync";
                    case -819592028:
                            return "FindMethodImplementationAsync";
                    case -625742380:
                            return "CreateMethodEntityAsync";
                    case -1216938713:
                            return "GetMethodEntityAsync";
                    case -1382348266:
                            return "GetRootsAsync";
                    case -1048664479:
                            return "GetPublicMethodsAsync";
                    case 218487452:
                            return "GetReachableMethodsAsync";
                    case -407445145:
                            return "GetReachableMethodsCountAsync";
                    case -1786662708:
                            return "GetDocumentsAsync";
                    case -215926694:
                            return "GetDocumentEntitiesAsync";
                    case -712939535:
                            return "RemoveMethodAsync";
                    case 270787994:
                            return "AddMethodAsync";
                    case -1249255428:
                            return "ReplaceDocumentSourceAsync";
                    case -376506142:
                            return "ReplaceDocumentAsync";
                    case 1545148890:
                            return "GetModificationsAsync";
                    case 1656425842:
                            return "ReloadAsync";
                    case -897137724:
                            return "GetDeclarationInfoAsync";
                    case 2072120383:
                            return "GetInvocationInfoAsync";
                    case 1884882198:
                            return "GetCompatibleInstantiatedTypesAsync";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1277021679:  // IGrainWithStringKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class StatsGrainFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IStatsGrain> instead.")]
                        public static IStatsGrain GetGrain(System.String primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IStatsGrain), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IStatsGrain> instead.")]
                        public static IStatsGrain GetGrain(System.String primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IStatsGrain), primaryKey, grainClassNamePrefix));
                        }

            public static IStatsGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return StatsGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("OrleansInterfaces.IStatsGrain")]
        internal class StatsGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, OrleansInterfaces.IStatsGrain
        {
            

            public static IStatsGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IStatsGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IStatsGrain), (global::Orleans.Runtime.GrainReference gr) => { return new StatsGrainReference(gr);}, grainRef, 1441553740);
            }
            
            protected internal StatsGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal StatsGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1441553740;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "OrleansInterfaces.IStatsGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                StatsGrainReference input = ((StatsGrainReference)(original));
                return ((StatsGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                StatsGrainReference input = ((StatsGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return StatsGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1277021679));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return StatsGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task OrleansInterfaces.IStatsGrain.RegisterMessage(string @message, string @senderAddr, string @receiverAddr, bool @isClient, double @timeDiff)
            {

                return base.InvokeMethodAsync<object>(1573407269, new object[] {@message, @senderAddr, @receiverAddr, @isClient, @timeDiff} );
            }
            
            System.Threading.Tasks.Task OrleansInterfaces.IStatsGrain.ResetStats()
            {

                return base.InvokeMethodAsync<object>(-308491259, null );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, long>> OrleansInterfaces.IStatsGrain.GetSiloSentMsgs(string @siloAddr)
            {

                return base.InvokeMethodAsync<System.Collections.Generic.Dictionary<System.String,System.Int64>>(1592963437, new object[] {@siloAddr} );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, long>> OrleansInterfaces.IStatsGrain.GetSiloReceivedMsgs(string @siloAddr)
            {

                return base.InvokeMethodAsync<System.Collections.Generic.Dictionary<System.String,System.Int64>>(696969334, new object[] {@siloAddr} );
            }
            
            System.Threading.Tasks.Task<long> OrleansInterfaces.IStatsGrain.GetSiloLocalMsgs(string @siloAddr)
            {

                return base.InvokeMethodAsync<System.Int64>(-848669405, new object[] {@siloAddr} );
            }
            
            System.Threading.Tasks.Task<long> OrleansInterfaces.IStatsGrain.GetSiloNetworkSentMsgs(string @siloAddr)
            {

                return base.InvokeMethodAsync<System.Int64>(167842962, new object[] {@siloAddr} );
            }
            
            System.Threading.Tasks.Task<long> OrleansInterfaces.IStatsGrain.GetSiloNetworkReceivedMsgs(string @siloAddr)
            {

                return base.InvokeMethodAsync<System.Int64>(-470871033, new object[] {@siloAddr} );
            }
            
            System.Threading.Tasks.Task<long> OrleansInterfaces.IStatsGrain.GetTotalSentMsgs(string @siloAddr)
            {

                return base.InvokeMethodAsync<System.Int64>(1997436451, new object[] {@siloAddr} );
            }
            
            System.Threading.Tasks.Task<long> OrleansInterfaces.IStatsGrain.GetTotalReceivedMsgs(string @siloAddr)
            {

                return base.InvokeMethodAsync<System.Int64>(-1490995845, new object[] {@siloAddr} );
            }
            
            System.Threading.Tasks.Task OrleansInterfaces.IStatsGrain.RegisterActivation(string @grainClass, string @calleeAddr)
            {

                return base.InvokeMethodAsync<object>(1945195604, new object[] {@grainClass, @calleeAddr} );
            }
            
            System.Threading.Tasks.Task OrleansInterfaces.IStatsGrain.RegisterDeactivation(string @grainClass, string @calleeAddr)
            {

                return base.InvokeMethodAsync<object>(-1541072890, new object[] {@grainClass, @calleeAddr} );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, long>> OrleansInterfaces.IStatsGrain.GetActivationsPerSilo(string @siloAddr)
            {

                return base.InvokeMethodAsync<System.Collections.Generic.Dictionary<System.String,System.Int64>>(1078992668, new object[] {@siloAddr} );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, long>> OrleansInterfaces.IStatsGrain.GetDeactivationsPerSilo(string @siloAddr)
            {

                return base.InvokeMethodAsync<System.Collections.Generic.Dictionary<System.String,System.Int64>>(802397946, new object[] {@siloAddr} );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<string>> OrleansInterfaces.IStatsGrain.GetGrainClasses()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.IEnumerable<System.String>>(-1350517881, null );
            }
            
            System.Threading.Tasks.Task<long> OrleansInterfaces.IStatsGrain.GetActivations(string @grainClass)
            {

                return base.InvokeMethodAsync<System.Int64>(1128054625, new object[] {@grainClass} );
            }
            
            System.Threading.Tasks.Task<long> OrleansInterfaces.IStatsGrain.GetDeactivations(string @grainClass)
            {

                return base.InvokeMethodAsync<System.Int64>(196409260, new object[] {@grainClass} );
            }
            
            System.Threading.Tasks.Task<long> OrleansInterfaces.IStatsGrain.GetTotalMessages()
            {

                return base.InvokeMethodAsync<System.Int64>(819616702, null );
            }
            
            System.Threading.Tasks.Task<long> OrleansInterfaces.IStatsGrain.GetTotalClientMessages()
            {

                return base.InvokeMethodAsync<System.Int64>(1678246452, null );
            }
            
            System.Threading.Tasks.Task<long> OrleansInterfaces.IStatsGrain.GetTotalClientMsgsPerSilo(string @siloAddr)
            {

                return base.InvokeMethodAsync<System.Int64>(-201262218, new object[] {@siloAddr} );
            }
            
            System.Threading.Tasks.Task<double> OrleansInterfaces.IStatsGrain.GetAverageLatency()
            {

                return base.InvokeMethodAsync<System.Double>(788988929, null );
            }
            
            System.Threading.Tasks.Task<double> OrleansInterfaces.IStatsGrain.GetMaxLatency()
            {

                return base.InvokeMethodAsync<System.Double>(199155870, null );
            }
            
            System.Threading.Tasks.Task<string> OrleansInterfaces.IStatsGrain.GetMaxLatencyMsg()
            {

                return base.InvokeMethodAsync<System.String>(1239575080, null );
            }
            
            System.Threading.Tasks.Task<long> OrleansInterfaces.IStatsGrain.GetSiloMemoryUsage(string @addrString)
            {

                return base.InvokeMethodAsync<System.Int64>(438298509, new object[] {@addrString} );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<string>> OrleansInterfaces.IStatsGrain.GetSilos()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.IEnumerable<System.String>>(-861948649, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("OrleansInterfaces.IStatsGrain", 1441553740)]
    internal class StatsGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1441553740;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1441553740:  // IStatsGrain
                        switch (methodId)
                        {
                            case 1573407269: 
                                return ((IStatsGrain)grain).RegisterMessage((String)arguments[0], (String)arguments[1], (String)arguments[2], (Boolean)arguments[3], (Double)arguments[4]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -308491259: 
                                return ((IStatsGrain)grain).ResetStats().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1592963437: 
                                return ((IStatsGrain)grain).GetSiloSentMsgs((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 696969334: 
                                return ((IStatsGrain)grain).GetSiloReceivedMsgs((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -848669405: 
                                return ((IStatsGrain)grain).GetSiloLocalMsgs((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 167842962: 
                                return ((IStatsGrain)grain).GetSiloNetworkSentMsgs((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -470871033: 
                                return ((IStatsGrain)grain).GetSiloNetworkReceivedMsgs((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1997436451: 
                                return ((IStatsGrain)grain).GetTotalSentMsgs((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1490995845: 
                                return ((IStatsGrain)grain).GetTotalReceivedMsgs((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1945195604: 
                                return ((IStatsGrain)grain).RegisterActivation((String)arguments[0], (String)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1541072890: 
                                return ((IStatsGrain)grain).RegisterDeactivation((String)arguments[0], (String)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1078992668: 
                                return ((IStatsGrain)grain).GetActivationsPerSilo((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 802397946: 
                                return ((IStatsGrain)grain).GetDeactivationsPerSilo((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1350517881: 
                                return ((IStatsGrain)grain).GetGrainClasses().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1128054625: 
                                return ((IStatsGrain)grain).GetActivations((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 196409260: 
                                return ((IStatsGrain)grain).GetDeactivations((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 819616702: 
                                return ((IStatsGrain)grain).GetTotalMessages().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1678246452: 
                                return ((IStatsGrain)grain).GetTotalClientMessages().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -201262218: 
                                return ((IStatsGrain)grain).GetTotalClientMsgsPerSilo((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 788988929: 
                                return ((IStatsGrain)grain).GetAverageLatency().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 199155870: 
                                return ((IStatsGrain)grain).GetMaxLatency().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1239575080: 
                                return ((IStatsGrain)grain).GetMaxLatencyMsg().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 438298509: 
                                return ((IStatsGrain)grain).GetSiloMemoryUsage((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -861948649: 
                                return ((IStatsGrain)grain).GetSilos().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1277021679:  // IGrainWithStringKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1441553740:  // IStatsGrain
                    switch (methodId)
                    {
                        case 1573407269:
                            return "RegisterMessage";
                    case -308491259:
                            return "ResetStats";
                    case 1592963437:
                            return "GetSiloSentMsgs";
                    case 696969334:
                            return "GetSiloReceivedMsgs";
                    case -848669405:
                            return "GetSiloLocalMsgs";
                    case 167842962:
                            return "GetSiloNetworkSentMsgs";
                    case -470871033:
                            return "GetSiloNetworkReceivedMsgs";
                    case 1997436451:
                            return "GetTotalSentMsgs";
                    case -1490995845:
                            return "GetTotalReceivedMsgs";
                    case 1945195604:
                            return "RegisterActivation";
                    case -1541072890:
                            return "RegisterDeactivation";
                    case 1078992668:
                            return "GetActivationsPerSilo";
                    case 802397946:
                            return "GetDeactivationsPerSilo";
                    case -1350517881:
                            return "GetGrainClasses";
                    case 1128054625:
                            return "GetActivations";
                    case 196409260:
                            return "GetDeactivations";
                    case 819616702:
                            return "GetTotalMessages";
                    case 1678246452:
                            return "GetTotalClientMessages";
                    case -201262218:
                            return "GetTotalClientMsgsPerSilo";
                    case 788988929:
                            return "GetAverageLatency";
                    case 199155870:
                            return "GetMaxLatency";
                    case 1239575080:
                            return "GetMaxLatencyMsg";
                    case 438298509:
                            return "GetSiloMemoryUsage";
                    case -861948649:
                            return "GetSilos";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1277021679:  // IGrainWithStringKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class SolutionGrainFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<ISolutionGrain> instead.")]
                        public static ISolutionGrain GetGrain(System.String primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISolutionGrain), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<ISolutionGrain> instead.")]
                        public static ISolutionGrain GetGrain(System.String primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISolutionGrain), primaryKey, grainClassNamePrefix));
                        }

            public static ISolutionGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return SolutionGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("OrleansInterfaces.ISolutionGrain")]
        internal class SolutionGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, OrleansInterfaces.ISolutionGrain
        {
            

            public static ISolutionGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (ISolutionGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(ISolutionGrain), (global::Orleans.Runtime.GrainReference gr) => { return new SolutionGrainReference(gr);}, grainRef, -1646659855);
            }
            
            protected internal SolutionGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal SolutionGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1646659855;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "OrleansInterfaces.ISolutionGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                SolutionGrainReference input = ((SolutionGrainReference)(original));
                return ((SolutionGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                SolutionGrainReference input = ((SolutionGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return SolutionGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1277021679));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return SolutionGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task OrleansInterfaces.ISolutionGrain.SetSolutionPathAsync(string @solutionPath)
            {

                return base.InvokeMethodAsync<object>(417242419, new object[] {@solutionPath} );
            }
            
            System.Threading.Tasks.Task OrleansInterfaces.ISolutionGrain.SetSolutionSourceAsync(string @solutionSource)
            {

                return base.InvokeMethodAsync<object>(358217058, new object[] {@solutionSource} );
            }
            
            System.Threading.Tasks.Task OrleansInterfaces.ISolutionGrain.SetSolutionFromTestAsync(string @testName)
            {

                return base.InvokeMethodAsync<object>(-1647620950, new object[] {@testName} );
            }
            
            System.Threading.Tasks.Task OrleansInterfaces.ISolutionGrain.ForceDeactivation()
            {

                return base.InvokeMethodAsync<object>(1401366121, null );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<string>> OrleansInterfaces.ISolutionGrain.GetDrives()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.IEnumerable<System.String>>(-928521370, null );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<ReachingTypeAnalysis.MethodDescriptor>> ReachingTypeAnalysis.ISolutionManager.GetRootsAsync()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.IEnumerable<ReachingTypeAnalysis.MethodDescriptor>>(-1382348266, null );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<ReachingTypeAnalysis.MethodDescriptor>> ReachingTypeAnalysis.ISolutionManager.GetPublicMethodsAsync()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.IEnumerable<ReachingTypeAnalysis.MethodDescriptor>>(-1048664479, null );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<ReachingTypeAnalysis.MethodDescriptor>> ReachingTypeAnalysis.ISolutionManager.GetReachableMethodsAsync()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.IEnumerable<ReachingTypeAnalysis.MethodDescriptor>>(218487452, null );
            }
            
            System.Threading.Tasks.Task<int> ReachingTypeAnalysis.ISolutionManager.GetReachableMethodsCountAsync()
            {

                return base.InvokeMethodAsync<System.Int32>(-407445145, null );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<ReachingTypeAnalysis.IProjectCodeProvider>> ReachingTypeAnalysis.ISolutionManager.GetProjectCodeProvidersAsync()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.IEnumerable<ReachingTypeAnalysis.IProjectCodeProvider>>(-1200848455, null );
            }
            
            System.Threading.Tasks.Task<ReachingTypeAnalysis.IProjectCodeProvider> ReachingTypeAnalysis.ISolutionManager.GetProjectCodeProviderAsync(string @assemblyName)
            {

                return base.InvokeMethodAsync<ReachingTypeAnalysis.IProjectCodeProvider>(117374023, new object[] {@assemblyName} );
            }
            
            System.Threading.Tasks.Task<ReachingTypeAnalysis.IProjectCodeProvider> ReachingTypeAnalysis.ISolutionManager.GetProjectCodeProviderAsync(ReachingTypeAnalysis.MethodDescriptor @methodDescriptor)
            {

                return base.InvokeMethodAsync<ReachingTypeAnalysis.IProjectCodeProvider>(1951770605, new object[] {@methodDescriptor} );
            }
            
            System.Threading.Tasks.Task<ReachingTypeAnalysis.IMethodEntityWithPropagator> ReachingTypeAnalysis.ISolutionManager.GetMethodEntityAsync(ReachingTypeAnalysis.MethodDescriptor @methodDescriptor)
            {

                return base.InvokeMethodAsync<ReachingTypeAnalysis.IMethodEntityWithPropagator>(-1216938713, new object[] {@methodDescriptor} );
            }
            
            System.Threading.Tasks.Task ReachingTypeAnalysis.ISolutionManager.AddInstantiatedTypesAsync(IEnumerable<TypeDescriptor> @types)
            {

                return base.InvokeMethodAsync<object>(-788867248, new object[] {@types} );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>> ReachingTypeAnalysis.ISolutionManager.GetInstantiatedTypesAsync()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>>(-1582333904, null );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<ReachingTypeAnalysis.MethodModification>> ReachingTypeAnalysis.ISolutionManager.GetModificationsAsync(IEnumerable<String> @modifiedDocuments)
            {

                return base.InvokeMethodAsync<System.Collections.Generic.IEnumerable<ReachingTypeAnalysis.MethodModification>>(1545148890, new object[] {@modifiedDocuments} );
            }
            
            System.Threading.Tasks.Task ReachingTypeAnalysis.ISolutionManager.ReloadAsync()
            {

                return base.InvokeMethodAsync<object>(1656425842, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("OrleansInterfaces.ISolutionGrain", -1646659855)]
    internal class SolutionGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1646659855;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1646659855:  // ISolutionGrain
                        switch (methodId)
                        {
                            case 417242419: 
                                return ((ISolutionGrain)grain).SetSolutionPathAsync((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 358217058: 
                                return ((ISolutionGrain)grain).SetSolutionSourceAsync((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1647620950: 
                                return ((ISolutionGrain)grain).SetSolutionFromTestAsync((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1401366121: 
                                return ((ISolutionGrain)grain).ForceDeactivation().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -928521370: 
                                return ((ISolutionGrain)grain).GetDrives().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1382348266: 
                                return ((ISolutionGrain)grain).GetRootsAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1048664479: 
                                return ((ISolutionGrain)grain).GetPublicMethodsAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 218487452: 
                                return ((ISolutionGrain)grain).GetReachableMethodsAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -407445145: 
                                return ((ISolutionGrain)grain).GetReachableMethodsCountAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1200848455: 
                                return ((ISolutionGrain)grain).GetProjectCodeProvidersAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 117374023: 
                                return ((ISolutionGrain)grain).GetProjectCodeProviderAsync((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1951770605: 
                                return ((ISolutionGrain)grain).GetProjectCodeProviderAsync((MethodDescriptor)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1216938713: 
                                return ((ISolutionGrain)grain).GetMethodEntityAsync((MethodDescriptor)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -788867248: 
                                return ((ISolutionGrain)grain).AddInstantiatedTypesAsync((IEnumerable<TypeDescriptor>)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1582333904: 
                                return ((ISolutionGrain)grain).GetInstantiatedTypesAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1545148890: 
                                return ((ISolutionGrain)grain).GetModificationsAsync((IEnumerable<String>)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1656425842: 
                                return ((ISolutionGrain)grain).ReloadAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1277021679:  // IGrainWithStringKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1646659855:  // ISolutionGrain
                    switch (methodId)
                    {
                        case 417242419:
                            return "SetSolutionPathAsync";
                    case 358217058:
                            return "SetSolutionSourceAsync";
                    case -1647620950:
                            return "SetSolutionFromTestAsync";
                    case 1401366121:
                            return "ForceDeactivation";
                    case -928521370:
                            return "GetDrives";
                    case -1382348266:
                            return "GetRootsAsync";
                    case -1048664479:
                            return "GetPublicMethodsAsync";
                    case 218487452:
                            return "GetReachableMethodsAsync";
                    case -407445145:
                            return "GetReachableMethodsCountAsync";
                    case -1200848455:
                            return "GetProjectCodeProvidersAsync";
                    case 117374023:
                            return "GetProjectCodeProviderAsync";
                    case 1951770605:
                            return "GetProjectCodeProviderAsync";
                    case -1216938713:
                            return "GetMethodEntityAsync";
                    case -788867248:
                            return "AddInstantiatedTypesAsync";
                    case -1582333904:
                            return "GetInstantiatedTypesAsync";
                    case 1545148890:
                            return "GetModificationsAsync";
                    case 1656425842:
                            return "ReloadAsync";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1277021679:  // IGrainWithStringKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class MethodEntityGrainFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IMethodEntityGrain> instead.")]
                        public static IMethodEntityGrain GetGrain(System.String primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IMethodEntityGrain), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IMethodEntityGrain> instead.")]
                        public static IMethodEntityGrain GetGrain(System.String primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IMethodEntityGrain), primaryKey, grainClassNamePrefix));
                        }

            public static IMethodEntityGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return MethodEntityGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("OrleansInterfaces.IMethodEntityGrain")]
        internal class MethodEntityGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, OrleansInterfaces.IMethodEntityGrain
        {
            

            public static IMethodEntityGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IMethodEntityGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IMethodEntityGrain), (global::Orleans.Runtime.GrainReference gr) => { return new MethodEntityGrainReference(gr);}, grainRef, 898358989);
            }
            
            protected internal MethodEntityGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal MethodEntityGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 898358989;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "OrleansInterfaces.IMethodEntityGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                MethodEntityGrainReference input = ((MethodEntityGrainReference)(original));
                return ((MethodEntityGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                MethodEntityGrainReference input = ((MethodEntityGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return MethodEntityGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1277021679));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return MethodEntityGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task OrleansInterfaces.IMethodEntityGrain.ForceDeactivationAsync()
            {

                return base.InvokeMethodAsync<object>(2021534182, null );
            }
            
            System.Threading.Tasks.Task<ReachingTypeAnalysis.PropagationEffects> ReachingTypeAnalysis.IMethodEntityWithPropagator.PropagateAsync(ReachingTypeAnalysis.PropagationKind @propKind)
            {

                return base.InvokeMethodAsync<ReachingTypeAnalysis.PropagationEffects>(1262137734, new object[] {@propKind} );
            }
            
            System.Threading.Tasks.Task<ReachingTypeAnalysis.PropagationEffects> ReachingTypeAnalysis.IMethodEntityWithPropagator.PropagateAsync(ReachingTypeAnalysis.PropagationKind @propKind, IEnumerable<PropGraphNodeDescriptor> @reWorkSet)
            {

                return base.InvokeMethodAsync<ReachingTypeAnalysis.PropagationEffects>(-70322529, new object[] {@propKind, @reWorkSet} );
            }
            
            System.Threading.Tasks.Task<ReachingTypeAnalysis.PropagationEffects> ReachingTypeAnalysis.IMethodEntityWithPropagator.PropagateAsync(ReachingTypeAnalysis.Communication.CallMessageInfo @callMessageInfo)
            {

                return base.InvokeMethodAsync<ReachingTypeAnalysis.PropagationEffects>(-1023082020, new object[] {@callMessageInfo} );
            }
            
            System.Threading.Tasks.Task<ReachingTypeAnalysis.PropagationEffects> ReachingTypeAnalysis.IMethodEntityWithPropagator.PropagateAsync(ReachingTypeAnalysis.Communication.ReturnMessageInfo @returnMessageInfo)
            {

                return base.InvokeMethodAsync<ReachingTypeAnalysis.PropagationEffects>(-1329787351, new object[] {@returnMessageInfo} );
            }
            
            System.Threading.Tasks.Task<bool> ReachingTypeAnalysis.IMethodEntityWithPropagator.IsInitializedAsync()
            {

                return base.InvokeMethodAsync<System.Boolean>(1375290350, null );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<ReachingTypeAnalysis.TypeDescriptor>> ReachingTypeAnalysis.IMethodEntityWithPropagator.GetInstantiatedTypesAsync()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.IEnumerable<ReachingTypeAnalysis.TypeDescriptor>>(-1582333904, null );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<ReachingTypeAnalysis.CallContext>> ReachingTypeAnalysis.IMethodEntityWithPropagator.GetCallersAsync()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.IEnumerable<ReachingTypeAnalysis.CallContext>>(-462065192, null );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.ISet<ReachingTypeAnalysis.MethodDescriptor>> ReachingTypeAnalysis.IMethodEntityWithPropagator.GetCalleesAsync()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.ISet<ReachingTypeAnalysis.MethodDescriptor>>(412610256, null );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.IDictionary<ReachingTypeAnalysis.AnalysisCallNode, System.Collections.Generic.ISet<ReachingTypeAnalysis.MethodDescriptor>>> ReachingTypeAnalysis.IMethodEntityWithPropagator.GetCalleesInfoAsync()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.IDictionary<ReachingTypeAnalysis.AnalysisCallNode,System.Collections.Generic.ISet<ReachingTypeAnalysis.MethodDescriptor>>>(-65115232, null );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.ISet<ReachingTypeAnalysis.MethodDescriptor>> ReachingTypeAnalysis.IMethodEntityWithPropagator.GetCalleesAsync(int @invocationPosition)
            {

                return base.InvokeMethodAsync<System.Collections.Generic.ISet<ReachingTypeAnalysis.MethodDescriptor>>(-526083791, new object[] {@invocationPosition} );
            }
            
            System.Threading.Tasks.Task<int> ReachingTypeAnalysis.IMethodEntityWithPropagator.GetInvocationCountAsync()
            {

                return base.InvokeMethodAsync<System.Int32>(-1748235903, null );
            }
            
            System.Threading.Tasks.Task<CodeGraphModel.SymbolReference> ReachingTypeAnalysis.IMethodEntityWithPropagator.GetDeclarationInfoAsync()
            {

                return base.InvokeMethodAsync<CodeGraphModel.SymbolReference>(1177533854, null );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<CodeGraphModel.SymbolReference>> ReachingTypeAnalysis.IMethodEntityWithPropagator.GetCallersDeclarationInfoAsync()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.IEnumerable<CodeGraphModel.SymbolReference>>(507288177, null );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<CodeGraphModel.Annotation>> ReachingTypeAnalysis.IMethodEntityWithPropagator.GetAnnotationsAsync()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.IEnumerable<CodeGraphModel.Annotation>>(-1582286320, null );
            }
            
            System.Threading.Tasks.Task<ReachingTypeAnalysis.PropagationEffects> ReachingTypeAnalysis.IMethodEntityWithPropagator.RemoveMethodAsync()
            {

                return base.InvokeMethodAsync<ReachingTypeAnalysis.PropagationEffects>(-1581952982, null );
            }
            
            System.Threading.Tasks.Task ReachingTypeAnalysis.IMethodEntityWithPropagator.UnregisterCallerAsync(ReachingTypeAnalysis.CallContext @callContext)
            {

                return base.InvokeMethodAsync<object>(-882309997, new object[] {@callContext} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("OrleansInterfaces.IMethodEntityGrain", 898358989)]
    internal class MethodEntityGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 898358989;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 898358989:  // IMethodEntityGrain
                        switch (methodId)
                        {
                            case 2021534182: 
                                return ((IMethodEntityGrain)grain).ForceDeactivationAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1262137734: 
                                return ((IMethodEntityGrain)grain).PropagateAsync((PropagationKind)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -70322529: 
                                return ((IMethodEntityGrain)grain).PropagateAsync((PropagationKind)arguments[0], (IEnumerable<PropGraphNodeDescriptor>)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1023082020: 
                                return ((IMethodEntityGrain)grain).PropagateAsync((ReachingTypeAnalysis.Communication.CallMessageInfo)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1329787351: 
                                return ((IMethodEntityGrain)grain).PropagateAsync((ReachingTypeAnalysis.Communication.ReturnMessageInfo)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1375290350: 
                                return ((IMethodEntityGrain)grain).IsInitializedAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1582333904: 
                                return ((IMethodEntityGrain)grain).GetInstantiatedTypesAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -462065192: 
                                return ((IMethodEntityGrain)grain).GetCallersAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 412610256: 
                                return ((IMethodEntityGrain)grain).GetCalleesAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -65115232: 
                                return ((IMethodEntityGrain)grain).GetCalleesInfoAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -526083791: 
                                return ((IMethodEntityGrain)grain).GetCalleesAsync((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1748235903: 
                                return ((IMethodEntityGrain)grain).GetInvocationCountAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1177533854: 
                                return ((IMethodEntityGrain)grain).GetDeclarationInfoAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 507288177: 
                                return ((IMethodEntityGrain)grain).GetCallersDeclarationInfoAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1582286320: 
                                return ((IMethodEntityGrain)grain).GetAnnotationsAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1581952982: 
                                return ((IMethodEntityGrain)grain).RemoveMethodAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -882309997: 
                                return ((IMethodEntityGrain)grain).UnregisterCallerAsync((CallContext)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1277021679:  // IGrainWithStringKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 898358989:  // IMethodEntityGrain
                    switch (methodId)
                    {
                        case 2021534182:
                            return "ForceDeactivationAsync";
                    case 1262137734:
                            return "PropagateAsync";
                    case -70322529:
                            return "PropagateAsync";
                    case -1023082020:
                            return "PropagateAsync";
                    case -1329787351:
                            return "PropagateAsync";
                    case 1375290350:
                            return "IsInitializedAsync";
                    case -1582333904:
                            return "GetInstantiatedTypesAsync";
                    case -462065192:
                            return "GetCallersAsync";
                    case 412610256:
                            return "GetCalleesAsync";
                    case -65115232:
                            return "GetCalleesInfoAsync";
                    case -526083791:
                            return "GetCalleesAsync";
                    case -1748235903:
                            return "GetInvocationCountAsync";
                    case 1177533854:
                            return "GetDeclarationInfoAsync";
                    case 507288177:
                            return "GetCallersDeclarationInfoAsync";
                    case -1582286320:
                            return "GetAnnotationsAsync";
                    case -1581952982:
                            return "RemoveMethodAsync";
                    case -882309997:
                            return "UnregisterCallerAsync";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1277021679:  // IGrainWithStringKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
}
namespace OrleansInterfacesSerializers
{
    using System;
    using System.Collections.Generic;
    using System.Reflection;
    using Orleans.Serialization;
    using ReachingTypeAnalysis;
    using CodeGraphModel;
    using ReachingTypeAnalysis.Communication;
    using System.Collections;
    using System.Runtime.InteropServices;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class ReachingTypeAnalysis_TypeDescriptorSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        private static System.Reflection.FieldInfo fieldInfo5;
        
        private static System.Reflection.FieldInfo fieldInfo6;
        
        static ReachingTypeAnalysis_TypeDescriptorSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            ReachingTypeAnalysis.TypeDescriptor input = ((ReachingTypeAnalysis.TypeDescriptor)(original));
            ReachingTypeAnalysis.TypeDescriptor result = ((ReachingTypeAnalysis.TypeDescriptor)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ReachingTypeAnalysis.TypeDescriptor))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = input.AssemblyName;
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = input.ClassName;
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = input.IsConcreteType;
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = input.IsReferenceType;
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = input.Kind;
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = input.NamespaceName;
            fieldInfo6.SetValue(objResult, temp6);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            ReachingTypeAnalysis.TypeDescriptor input = ((ReachingTypeAnalysis.TypeDescriptor)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.AssemblyName, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ClassName, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.IsConcreteType, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.IsReferenceType, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Kind, stream, typeof(ReachingTypeAnalysis.SerializableTypeKind));
            Orleans.Serialization.SerializationManager.SerializeInner(input.NamespaceName, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            ReachingTypeAnalysis.TypeDescriptor result = ((ReachingTypeAnalysis.TypeDescriptor)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ReachingTypeAnalysis.TypeDescriptor))));
            object objResult = ((object)(result));
            object temp1 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((ReachingTypeAnalysis.SerializableTypeKind)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.SerializableTypeKind), stream)));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo6.SetValue(objResult, temp6);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(ReachingTypeAnalysis.TypeDescriptor), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(ReachingTypeAnalysis.TypeDescriptor).GetField("<AssemblyName>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(ReachingTypeAnalysis.TypeDescriptor).GetField("<ClassName>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(ReachingTypeAnalysis.TypeDescriptor).GetField("<IsConcreteType>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(ReachingTypeAnalysis.TypeDescriptor).GetField("<IsReferenceType>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo5 = typeof(ReachingTypeAnalysis.TypeDescriptor).GetField("<Kind>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo6 = typeof(ReachingTypeAnalysis.TypeDescriptor).GetField("<NamespaceName>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class ReachingTypeAnalysis_MethodDescriptorSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        private static System.Reflection.FieldInfo fieldInfo5;
        
        private static System.Reflection.FieldInfo fieldInfo6;
        
        private static System.Reflection.FieldInfo fieldInfo7;
        
        static ReachingTypeAnalysis_MethodDescriptorSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            ReachingTypeAnalysis.MethodDescriptor input = ((ReachingTypeAnalysis.MethodDescriptor)(original));
            ReachingTypeAnalysis.MethodDescriptor result = new ReachingTypeAnalysis.MethodDescriptor();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((ReachingTypeAnalysis.TypeDescriptor)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.ContainerType)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = input.IsAnonymousDescriptor;
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = input.IsStatic;
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = input.MethodName;
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((System.Collections.Generic.IList<ReachingTypeAnalysis.TypeDescriptor>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Parameters)));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((ReachingTypeAnalysis.TypeDescriptor)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.ReturnType)));
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = fieldInfo7.GetValue(input);
            fieldInfo7.SetValue(objResult, temp7);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            ReachingTypeAnalysis.MethodDescriptor input = ((ReachingTypeAnalysis.MethodDescriptor)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ContainerType, stream, typeof(ReachingTypeAnalysis.TypeDescriptor));
            Orleans.Serialization.SerializationManager.SerializeInner(input.IsAnonymousDescriptor, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.IsStatic, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.MethodName, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Parameters, stream, typeof(System.Collections.Generic.IList<ReachingTypeAnalysis.TypeDescriptor>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ReturnType, stream, typeof(ReachingTypeAnalysis.TypeDescriptor));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo7.GetValue(input), stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            ReachingTypeAnalysis.MethodDescriptor result = new ReachingTypeAnalysis.MethodDescriptor();
            object objResult = ((object)(result));
            object temp1 = ((ReachingTypeAnalysis.TypeDescriptor)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.TypeDescriptor), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((System.Collections.Generic.IList<ReachingTypeAnalysis.TypeDescriptor>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.IList<ReachingTypeAnalysis.TypeDescriptor>), stream)));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((ReachingTypeAnalysis.TypeDescriptor)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.TypeDescriptor), stream)));
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo7.SetValue(objResult, temp7);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(ReachingTypeAnalysis.MethodDescriptor), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(ReachingTypeAnalysis.MethodDescriptor).GetField("<ContainerType>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(ReachingTypeAnalysis.MethodDescriptor).GetField("<IsAnonymousDescriptor>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(ReachingTypeAnalysis.MethodDescriptor).GetField("<IsStatic>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(ReachingTypeAnalysis.MethodDescriptor).GetField("<MethodName>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo5 = typeof(ReachingTypeAnalysis.MethodDescriptor).GetField("<Parameters>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo6 = typeof(ReachingTypeAnalysis.MethodDescriptor).GetField("<ReturnType>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo7 = typeof(ReachingTypeAnalysis.MethodDescriptor).GetField("name", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class CodeGraphModel_FileResponseSerialization
    {
        
        static CodeGraphModel_FileResponseSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            CodeGraphModel.FileResponse input = ((CodeGraphModel.FileResponse)(original));
            CodeGraphModel.FileResponse result = new CodeGraphModel.FileResponse();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.assemblyname = input.assemblyname;
            result.declarationAnnotation = ((System.Collections.Generic.List<CodeGraphModel.DeclarationAnnotation>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.declarationAnnotation)));
            result.filepath = input.filepath;
            result.referenceAnnotation = ((System.Collections.Generic.List<CodeGraphModel.ReferenceAnnotation>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.referenceAnnotation)));
            result.repository = input.repository;
            result.uid = input.uid;
            result.version = input.version;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            CodeGraphModel.FileResponse input = ((CodeGraphModel.FileResponse)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.assemblyname, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.declarationAnnotation, stream, typeof(System.Collections.Generic.List<CodeGraphModel.DeclarationAnnotation>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.filepath, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.referenceAnnotation, stream, typeof(System.Collections.Generic.List<CodeGraphModel.ReferenceAnnotation>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.repository, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.uid, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.version, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            CodeGraphModel.FileResponse result = new CodeGraphModel.FileResponse();
            result.assemblyname = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.declarationAnnotation = ((System.Collections.Generic.List<CodeGraphModel.DeclarationAnnotation>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<CodeGraphModel.DeclarationAnnotation>), stream)));
            result.filepath = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.referenceAnnotation = ((System.Collections.Generic.List<CodeGraphModel.ReferenceAnnotation>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<CodeGraphModel.ReferenceAnnotation>), stream)));
            result.repository = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.uid = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.version = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(CodeGraphModel.FileResponse), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class CodeGraphModel_ReferenceAnnotationSerialization
    {
        
        static CodeGraphModel_ReferenceAnnotationSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            CodeGraphModel.ReferenceAnnotation input = ((CodeGraphModel.ReferenceAnnotation)(original));
            CodeGraphModel.ReferenceAnnotation result = new CodeGraphModel.ReferenceAnnotation();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.declAssembly = input.declAssembly;
            result.declFile = input.declFile;
            result.declarationId = input.declarationId;
            result.hover = input.hover;
            result.label = input.label;
            result.range = input.range;
            result.refType = input.refType;
            result.symbolId = input.symbolId;
            result.symbolType = input.symbolType;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            CodeGraphModel.ReferenceAnnotation input = ((CodeGraphModel.ReferenceAnnotation)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.declAssembly, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.declFile, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.declarationId, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.hover, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.label, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.range, stream, typeof(CodeGraphModel.Range));
            Orleans.Serialization.SerializationManager.SerializeInner(input.refType, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.symbolId, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.symbolType, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            CodeGraphModel.ReferenceAnnotation result = new CodeGraphModel.ReferenceAnnotation();
            result.declAssembly = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.declFile = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.declarationId = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.hover = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.label = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.range = ((CodeGraphModel.Range)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(CodeGraphModel.Range), stream)));
            result.refType = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.symbolId = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.symbolType = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(CodeGraphModel.ReferenceAnnotation), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class CodeGraphModel_RangeSerialization
    {
        
        static CodeGraphModel_RangeSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            CodeGraphModel.Range input = ((CodeGraphModel.Range)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.endColumn, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.endLineNumber, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.startColumn, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.startLineNumber, stream, typeof(int));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            CodeGraphModel.Range result = default(CodeGraphModel.Range);
            result.endColumn = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            result.endLineNumber = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            result.startColumn = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            result.startLineNumber = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(CodeGraphModel.Range), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class CodeGraphModel_DeclarationAnnotationSerialization
    {
        
        static CodeGraphModel_DeclarationAnnotationSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            CodeGraphModel.DeclarationAnnotation input = ((CodeGraphModel.DeclarationAnnotation)(original));
            CodeGraphModel.DeclarationAnnotation result = new CodeGraphModel.DeclarationAnnotation();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.declAssembly = input.declAssembly;
            result.depth = input.depth;
            result.glyph = input.glyph;
            result.hover = input.hover;
            result.label = input.label;
            result.range = input.range;
            result.refType = input.refType;
            result.symbolId = input.symbolId;
            result.symbolType = input.symbolType;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            CodeGraphModel.DeclarationAnnotation input = ((CodeGraphModel.DeclarationAnnotation)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.declAssembly, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.depth, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.glyph, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.hover, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.label, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.range, stream, typeof(CodeGraphModel.Range));
            Orleans.Serialization.SerializationManager.SerializeInner(input.refType, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.symbolId, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.symbolType, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            CodeGraphModel.DeclarationAnnotation result = new CodeGraphModel.DeclarationAnnotation();
            result.declAssembly = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.depth = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.glyph = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.hover = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.label = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.range = ((CodeGraphModel.Range)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(CodeGraphModel.Range), stream)));
            result.refType = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.symbolId = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.symbolType = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(CodeGraphModel.DeclarationAnnotation), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class ReachingTypeAnalysis_PropagationEffectsSerialization
    {
        
        static ReachingTypeAnalysis_PropagationEffectsSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            ReachingTypeAnalysis.PropagationEffects input = ((ReachingTypeAnalysis.PropagationEffects)(original));
            ReachingTypeAnalysis.PropagationEffects result = ((ReachingTypeAnalysis.PropagationEffects)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ReachingTypeAnalysis.PropagationEffects))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.CalleesInfo = ((System.Collections.Generic.ISet<ReachingTypeAnalysis.CallInfo>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.CalleesInfo)));
            result.CallersInfo = ((System.Collections.Generic.ISet<ReachingTypeAnalysis.ReturnInfo>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.CallersInfo)));
            result.ResultChanged = input.ResultChanged;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            ReachingTypeAnalysis.PropagationEffects input = ((ReachingTypeAnalysis.PropagationEffects)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CalleesInfo, stream, typeof(System.Collections.Generic.ISet<ReachingTypeAnalysis.CallInfo>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CallersInfo, stream, typeof(System.Collections.Generic.ISet<ReachingTypeAnalysis.ReturnInfo>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ResultChanged, stream, typeof(bool));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            ReachingTypeAnalysis.PropagationEffects result = ((ReachingTypeAnalysis.PropagationEffects)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ReachingTypeAnalysis.PropagationEffects))));
            result.CalleesInfo = ((System.Collections.Generic.ISet<ReachingTypeAnalysis.CallInfo>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.ISet<ReachingTypeAnalysis.CallInfo>), stream)));
            result.CallersInfo = ((System.Collections.Generic.ISet<ReachingTypeAnalysis.ReturnInfo>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.ISet<ReachingTypeAnalysis.ReturnInfo>), stream)));
            result.ResultChanged = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(ReachingTypeAnalysis.PropagationEffects), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class ReachingTypeAnalysis_ReturnInfoSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        static ReachingTypeAnalysis_ReturnInfoSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            ReachingTypeAnalysis.ReturnInfo input = ((ReachingTypeAnalysis.ReturnInfo)(original));
            ReachingTypeAnalysis.ReturnInfo result = ((ReachingTypeAnalysis.ReturnInfo)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ReachingTypeAnalysis.ReturnInfo))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Callee = ((ReachingTypeAnalysis.MethodDescriptor)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Callee)));
            object objResult = ((object)(result));
            object temp2 = ((ReachingTypeAnalysis.CallContext)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.CallerContext)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.InstantiatedTypes)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.ResultPossibleTypes)));
            fieldInfo4.SetValue(objResult, temp4);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            ReachingTypeAnalysis.ReturnInfo input = ((ReachingTypeAnalysis.ReturnInfo)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Callee, stream, typeof(ReachingTypeAnalysis.MethodDescriptor));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CallerContext, stream, typeof(ReachingTypeAnalysis.CallContext));
            Orleans.Serialization.SerializationManager.SerializeInner(input.InstantiatedTypes, stream, typeof(System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ResultPossibleTypes, stream, typeof(System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            ReachingTypeAnalysis.ReturnInfo result = ((ReachingTypeAnalysis.ReturnInfo)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ReachingTypeAnalysis.ReturnInfo))));
            result.Callee = ((ReachingTypeAnalysis.MethodDescriptor)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.MethodDescriptor), stream)));
            object objResult = ((object)(result));
            object temp2 = ((ReachingTypeAnalysis.CallContext)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.CallContext), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(ReachingTypeAnalysis.ReturnInfo), DeepCopier, Serializer, Deserializer);
            fieldInfo2 = typeof(ReachingTypeAnalysis.ReturnInfo).GetField("<CallerContext>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(ReachingTypeAnalysis.ReturnInfo).GetField("<InstantiatedTypes>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(ReachingTypeAnalysis.ReturnInfo).GetField("<ResultPossibleTypes>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class ReachingTypeAnalysis_MethodModificationSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        static ReachingTypeAnalysis_MethodModificationSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            ReachingTypeAnalysis.MethodModification input = ((ReachingTypeAnalysis.MethodModification)(original));
            ReachingTypeAnalysis.MethodModification result = ((ReachingTypeAnalysis.MethodModification)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ReachingTypeAnalysis.MethodModification))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((ReachingTypeAnalysis.MethodDescriptor)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.MethodDescriptor)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = input.ModificationKind;
            fieldInfo2.SetValue(objResult, temp2);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            ReachingTypeAnalysis.MethodModification input = ((ReachingTypeAnalysis.MethodModification)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.MethodDescriptor, stream, typeof(ReachingTypeAnalysis.MethodDescriptor));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ModificationKind, stream, typeof(ReachingTypeAnalysis.ModificationKind));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            ReachingTypeAnalysis.MethodModification result = ((ReachingTypeAnalysis.MethodModification)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ReachingTypeAnalysis.MethodModification))));
            object objResult = ((object)(result));
            object temp1 = ((ReachingTypeAnalysis.MethodDescriptor)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.MethodDescriptor), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((ReachingTypeAnalysis.ModificationKind)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.ModificationKind), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(ReachingTypeAnalysis.MethodModification), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(ReachingTypeAnalysis.MethodModification).GetField("<MethodDescriptor>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(ReachingTypeAnalysis.MethodModification).GetField("<ModificationKind>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class CodeGraphModel_SymbolReferenceSerialization
    {
        
        static CodeGraphModel_SymbolReferenceSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            CodeGraphModel.SymbolReference input = ((CodeGraphModel.SymbolReference)(original));
            CodeGraphModel.SymbolReference result = new CodeGraphModel.SymbolReference();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.preview = input.preview;
            result.refType = input.refType;
            result.trange = input.trange;
            result.tref = input.tref;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            CodeGraphModel.SymbolReference input = ((CodeGraphModel.SymbolReference)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.preview, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.refType, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.trange, stream, typeof(CodeGraphModel.Range));
            Orleans.Serialization.SerializationManager.SerializeInner(input.tref, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            CodeGraphModel.SymbolReference result = new CodeGraphModel.SymbolReference();
            result.preview = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.refType = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.trange = ((CodeGraphModel.Range)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(CodeGraphModel.Range), stream)));
            result.tref = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(CodeGraphModel.SymbolReference), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class ReachingTypeAnalysis_CallContextSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        static ReachingTypeAnalysis_CallContextSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            ReachingTypeAnalysis.CallContext input = ((ReachingTypeAnalysis.CallContext)(original));
            ReachingTypeAnalysis.CallContext result = ((ReachingTypeAnalysis.CallContext)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ReachingTypeAnalysis.CallContext))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((ReachingTypeAnalysis.AnalysisCallNode)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.CallNode)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((ReachingTypeAnalysis.MethodDescriptor)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Caller)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((ReachingTypeAnalysis.VariableNode)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.LHS)));
            fieldInfo3.SetValue(objResult, temp3);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            ReachingTypeAnalysis.CallContext input = ((ReachingTypeAnalysis.CallContext)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CallNode, stream, typeof(ReachingTypeAnalysis.AnalysisCallNode));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Caller, stream, typeof(ReachingTypeAnalysis.MethodDescriptor));
            Orleans.Serialization.SerializationManager.SerializeInner(input.LHS, stream, typeof(ReachingTypeAnalysis.VariableNode));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            ReachingTypeAnalysis.CallContext result = ((ReachingTypeAnalysis.CallContext)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ReachingTypeAnalysis.CallContext))));
            object objResult = ((object)(result));
            object temp1 = ((ReachingTypeAnalysis.AnalysisCallNode)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.AnalysisCallNode), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((ReachingTypeAnalysis.MethodDescriptor)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.MethodDescriptor), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((ReachingTypeAnalysis.VariableNode)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.VariableNode), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(ReachingTypeAnalysis.CallContext), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(ReachingTypeAnalysis.CallContext).GetField("<CallNode>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(ReachingTypeAnalysis.CallContext).GetField("<Caller>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(ReachingTypeAnalysis.CallContext).GetField("<LHS>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class ReachingTypeAnalysis_VariableNodeSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        static ReachingTypeAnalysis_VariableNodeSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            ReachingTypeAnalysis.VariableNode input = ((ReachingTypeAnalysis.VariableNode)(original));
            ReachingTypeAnalysis.VariableNode result = ((ReachingTypeAnalysis.VariableNode)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ReachingTypeAnalysis.VariableNode))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = input.Name;
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((ReachingTypeAnalysis.TypeDescriptor)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Type)));
            fieldInfo2.SetValue(objResult, temp2);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            ReachingTypeAnalysis.VariableNode input = ((ReachingTypeAnalysis.VariableNode)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Name, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Type, stream, typeof(ReachingTypeAnalysis.TypeDescriptor));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            ReachingTypeAnalysis.VariableNode result = ((ReachingTypeAnalysis.VariableNode)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ReachingTypeAnalysis.VariableNode))));
            object objResult = ((object)(result));
            object temp1 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((ReachingTypeAnalysis.TypeDescriptor)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.TypeDescriptor), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(ReachingTypeAnalysis.VariableNode), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(ReachingTypeAnalysis.PropGraphNodeDescriptor).GetField("<Name>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(ReachingTypeAnalysis.PropGraphNodeDescriptor).GetField("<Type>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class ReachingTypeAnalysis_Communication_CallMessageInfoSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        private static System.Reflection.FieldInfo fieldInfo5;
        
        private static System.Reflection.FieldInfo fieldInfo6;
        
        private static System.Reflection.FieldInfo fieldInfo7;
        
        static ReachingTypeAnalysis_Communication_CallMessageInfoSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            ReachingTypeAnalysis.Communication.CallMessageInfo input = ((ReachingTypeAnalysis.Communication.CallMessageInfo)(original));
            ReachingTypeAnalysis.Communication.CallMessageInfo result = new ReachingTypeAnalysis.Communication.CallMessageInfo();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((System.Collections.Generic.IList<System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.ArgumentsPossibleTypes)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((ReachingTypeAnalysis.AnalysisCallNode)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.CallNode)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((ReachingTypeAnalysis.MethodDescriptor)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Callee)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((ReachingTypeAnalysis.MethodDescriptor)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Caller)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((ReachingTypeAnalysis.VariableNode)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.LHS)));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = input.PropagationKind;
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = ((System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.ReceiverPossibleTypes)));
            fieldInfo7.SetValue(objResult, temp7);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            ReachingTypeAnalysis.Communication.CallMessageInfo input = ((ReachingTypeAnalysis.Communication.CallMessageInfo)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ArgumentsPossibleTypes, stream, typeof(System.Collections.Generic.IList<System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CallNode, stream, typeof(ReachingTypeAnalysis.AnalysisCallNode));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Callee, stream, typeof(ReachingTypeAnalysis.MethodDescriptor));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Caller, stream, typeof(ReachingTypeAnalysis.MethodDescriptor));
            Orleans.Serialization.SerializationManager.SerializeInner(input.LHS, stream, typeof(ReachingTypeAnalysis.VariableNode));
            Orleans.Serialization.SerializationManager.SerializeInner(input.PropagationKind, stream, typeof(ReachingTypeAnalysis.PropagationKind));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ReceiverPossibleTypes, stream, typeof(System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            ReachingTypeAnalysis.Communication.CallMessageInfo result = new ReachingTypeAnalysis.Communication.CallMessageInfo();
            object objResult = ((object)(result));
            object temp1 = ((System.Collections.Generic.IList<System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.IList<System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>>), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((ReachingTypeAnalysis.AnalysisCallNode)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.AnalysisCallNode), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((ReachingTypeAnalysis.MethodDescriptor)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.MethodDescriptor), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((ReachingTypeAnalysis.MethodDescriptor)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.MethodDescriptor), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((ReachingTypeAnalysis.VariableNode)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.VariableNode), stream)));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((ReachingTypeAnalysis.PropagationKind)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.PropagationKind), stream)));
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = ((System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>), stream)));
            fieldInfo7.SetValue(objResult, temp7);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(ReachingTypeAnalysis.Communication.CallMessageInfo), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(ReachingTypeAnalysis.Communication.CallMessageInfo).GetField("<ArgumentsPossibleTypes>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(ReachingTypeAnalysis.Communication.CallMessageInfo).GetField("<CallNode>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(ReachingTypeAnalysis.Communication.CallMessageInfo).GetField("<Callee>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(ReachingTypeAnalysis.Communication.CallMessageInfo).GetField("<Caller>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo5 = typeof(ReachingTypeAnalysis.Communication.CallMessageInfo).GetField("<LHS>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo6 = typeof(ReachingTypeAnalysis.Communication.CallMessageInfo).GetField("<PropagationKind>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo7 = typeof(ReachingTypeAnalysis.Communication.CallMessageInfo).GetField("<ReceiverPossibleTypes>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class ReachingTypeAnalysis_Communication_ReturnMessageInfoSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        private static System.Reflection.FieldInfo fieldInfo5;
        
        private static System.Reflection.FieldInfo fieldInfo6;
        
        static ReachingTypeAnalysis_Communication_ReturnMessageInfoSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            ReachingTypeAnalysis.Communication.ReturnMessageInfo input = ((ReachingTypeAnalysis.Communication.ReturnMessageInfo)(original));
            ReachingTypeAnalysis.Communication.ReturnMessageInfo result = new ReachingTypeAnalysis.Communication.ReturnMessageInfo();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((ReachingTypeAnalysis.AnalysisCallNode)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.CallNode)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((ReachingTypeAnalysis.MethodDescriptor)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Callee)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((ReachingTypeAnalysis.MethodDescriptor)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Caller)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((ReachingTypeAnalysis.VariableNode)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.LHS)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = input.PropagationKind;
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.ResultPossibleTypes)));
            fieldInfo6.SetValue(objResult, temp6);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            ReachingTypeAnalysis.Communication.ReturnMessageInfo input = ((ReachingTypeAnalysis.Communication.ReturnMessageInfo)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CallNode, stream, typeof(ReachingTypeAnalysis.AnalysisCallNode));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Callee, stream, typeof(ReachingTypeAnalysis.MethodDescriptor));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Caller, stream, typeof(ReachingTypeAnalysis.MethodDescriptor));
            Orleans.Serialization.SerializationManager.SerializeInner(input.LHS, stream, typeof(ReachingTypeAnalysis.VariableNode));
            Orleans.Serialization.SerializationManager.SerializeInner(input.PropagationKind, stream, typeof(ReachingTypeAnalysis.PropagationKind));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ResultPossibleTypes, stream, typeof(System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            ReachingTypeAnalysis.Communication.ReturnMessageInfo result = new ReachingTypeAnalysis.Communication.ReturnMessageInfo();
            object objResult = ((object)(result));
            object temp1 = ((ReachingTypeAnalysis.AnalysisCallNode)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.AnalysisCallNode), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((ReachingTypeAnalysis.MethodDescriptor)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.MethodDescriptor), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((ReachingTypeAnalysis.MethodDescriptor)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.MethodDescriptor), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((ReachingTypeAnalysis.VariableNode)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.VariableNode), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((ReachingTypeAnalysis.PropagationKind)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.PropagationKind), stream)));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.ISet<ReachingTypeAnalysis.TypeDescriptor>), stream)));
            fieldInfo6.SetValue(objResult, temp6);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(ReachingTypeAnalysis.Communication.ReturnMessageInfo), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(ReachingTypeAnalysis.Communication.ReturnMessageInfo).GetField("<CallNode>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(ReachingTypeAnalysis.Communication.ReturnMessageInfo).GetField("<Callee>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(ReachingTypeAnalysis.Communication.ReturnMessageInfo).GetField("<Caller>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(ReachingTypeAnalysis.Communication.ReturnMessageInfo).GetField("<LHS>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo5 = typeof(ReachingTypeAnalysis.Communication.ReturnMessageInfo).GetField("<PropagationKind>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo6 = typeof(ReachingTypeAnalysis.Communication.ReturnMessageInfo).GetField("<ResultPossibleTypes>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class ReachingTypeAnalysis_AnalysisCallNodeSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        private static System.Reflection.FieldInfo fieldInfo5;
        
        static ReachingTypeAnalysis_AnalysisCallNodeSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            ReachingTypeAnalysis.AnalysisCallNode input = ((ReachingTypeAnalysis.AnalysisCallNode)(original));
            ReachingTypeAnalysis.AnalysisCallNode result = ((ReachingTypeAnalysis.AnalysisCallNode)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ReachingTypeAnalysis.AnalysisCallNode))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((ReachingTypeAnalysis.AnalysisCallNodeAdditionalInfo)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.AdditionalInfo)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = input.InMethodPosition;
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((ReachingTypeAnalysis.LocationDescriptor)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.LocationDescriptor)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = input.Name;
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((ReachingTypeAnalysis.TypeDescriptor)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Type)));
            fieldInfo5.SetValue(objResult, temp5);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            ReachingTypeAnalysis.AnalysisCallNode input = ((ReachingTypeAnalysis.AnalysisCallNode)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.AdditionalInfo, stream, typeof(ReachingTypeAnalysis.AnalysisCallNodeAdditionalInfo));
            Orleans.Serialization.SerializationManager.SerializeInner(input.InMethodPosition, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.LocationDescriptor, stream, typeof(ReachingTypeAnalysis.LocationDescriptor));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Name, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Type, stream, typeof(ReachingTypeAnalysis.TypeDescriptor));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            ReachingTypeAnalysis.AnalysisCallNode result = ((ReachingTypeAnalysis.AnalysisCallNode)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ReachingTypeAnalysis.AnalysisCallNode))));
            object objResult = ((object)(result));
            object temp1 = ((ReachingTypeAnalysis.AnalysisCallNodeAdditionalInfo)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.AnalysisCallNodeAdditionalInfo), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((ReachingTypeAnalysis.LocationDescriptor)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.LocationDescriptor), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((ReachingTypeAnalysis.TypeDescriptor)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.TypeDescriptor), stream)));
            fieldInfo5.SetValue(objResult, temp5);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(ReachingTypeAnalysis.AnalysisCallNode), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(ReachingTypeAnalysis.AnalysisCallNode).GetField("<AdditionalInfo>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(ReachingTypeAnalysis.AnalysisCallNode).GetField("<InMethodPosition>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(ReachingTypeAnalysis.AnalysisCallNode).GetField("<LocationDescriptor>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(ReachingTypeAnalysis.PropGraphNodeDescriptor).GetField("<Name>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo5 = typeof(ReachingTypeAnalysis.PropGraphNodeDescriptor).GetField("<Type>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class ReachingTypeAnalysis_AnalysisCallNodeAdditionalInfoSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        static ReachingTypeAnalysis_AnalysisCallNodeAdditionalInfoSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            ReachingTypeAnalysis.AnalysisCallNodeAdditionalInfo input = ((ReachingTypeAnalysis.AnalysisCallNodeAdditionalInfo)(original));
            ReachingTypeAnalysis.AnalysisCallNodeAdditionalInfo result = ((ReachingTypeAnalysis.AnalysisCallNodeAdditionalInfo)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ReachingTypeAnalysis.AnalysisCallNodeAdditionalInfo))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = input.DisplayString;
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = input.StaticMethodDeclarationPath;
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((ReachingTypeAnalysis.MethodDescriptor)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.StaticMethodDescriptor)));
            fieldInfo3.SetValue(objResult, temp3);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            ReachingTypeAnalysis.AnalysisCallNodeAdditionalInfo input = ((ReachingTypeAnalysis.AnalysisCallNodeAdditionalInfo)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DisplayString, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.StaticMethodDeclarationPath, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.StaticMethodDescriptor, stream, typeof(ReachingTypeAnalysis.MethodDescriptor));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            ReachingTypeAnalysis.AnalysisCallNodeAdditionalInfo result = ((ReachingTypeAnalysis.AnalysisCallNodeAdditionalInfo)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ReachingTypeAnalysis.AnalysisCallNodeAdditionalInfo))));
            object objResult = ((object)(result));
            object temp1 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((ReachingTypeAnalysis.MethodDescriptor)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ReachingTypeAnalysis.MethodDescriptor), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(ReachingTypeAnalysis.AnalysisCallNodeAdditionalInfo), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(ReachingTypeAnalysis.AnalysisCallNodeAdditionalInfo).GetField("<DisplayString>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(ReachingTypeAnalysis.AnalysisCallNodeAdditionalInfo).GetField("<StaticMethodDeclarationPath>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(ReachingTypeAnalysis.AnalysisCallNodeAdditionalInfo).GetField("<StaticMethodDescriptor>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class ReachingTypeAnalysis_LocationDescriptorSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        static ReachingTypeAnalysis_LocationDescriptorSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            ReachingTypeAnalysis.LocationDescriptor input = ((ReachingTypeAnalysis.LocationDescriptor)(original));
            ReachingTypeAnalysis.LocationDescriptor result = ((ReachingTypeAnalysis.LocationDescriptor)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ReachingTypeAnalysis.LocationDescriptor))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = input.FilePath;
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = input.InMethodOrder;
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = input.Range;
            fieldInfo3.SetValue(objResult, temp3);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            ReachingTypeAnalysis.LocationDescriptor input = ((ReachingTypeAnalysis.LocationDescriptor)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.FilePath, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.InMethodOrder, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Range, stream, typeof(CodeGraphModel.Range));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            ReachingTypeAnalysis.LocationDescriptor result = ((ReachingTypeAnalysis.LocationDescriptor)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ReachingTypeAnalysis.LocationDescriptor))));
            object objResult = ((object)(result));
            object temp1 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((CodeGraphModel.Range)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(CodeGraphModel.Range), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(ReachingTypeAnalysis.LocationDescriptor), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(ReachingTypeAnalysis.LocationDescriptor).GetField("<FilePath>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(ReachingTypeAnalysis.LocationDescriptor).GetField("<InMethodOrder>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(ReachingTypeAnalysis.LocationDescriptor).GetField("<Range>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 649
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
